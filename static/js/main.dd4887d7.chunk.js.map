{"version":3,"sources":["styles/article.module.css","utils/firebase.js","components/addArticle.js","components/article.js","components/articleList.js","components/articles.js","components/graphs.js","components/calendar.js","components/question.js","components/entry.js","components/topbar.js","components/homeWrapper.js","components/login.js","components/register.js","components/profile.js","components/privateRoute.js","components/registerDoc.js","components/patient.js","components/patients.js","App.js","serviceWorker.js","index.js","styles/question.module.css"],"names":["module","exports","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","firebase","initializeApp","this","_auth","auth","_firestore","firestore","_storage","storage","ref","_user","values","child","name","put","image","then","snapshot","getDownloadURL","url","collection","add","category","value","date","user","console","log","email","where","get","forEach","doc","delete","time","signOut","password","age","diagnosis","history","behaviourManagement","createUserWithEmailAndPassword","undefined","Promise","resolve","reject","unsubscribe","onAuthStateChanged","Auth","Persistence","LOCAL","FirebaseContext","React","createContext","FormSchema","yup","shape","required","label","selectOptions","AddArticle","useContext","useHistory","useEffect","bsCustomFileInput","init","initialValues","onSubmit","submitArticle","push","catch","e","error","validationSchema","isSubmitting","handleSubmit","setFieldValue","Form","Modal","Header","Body","type","File","className","onChange","currentTarget","files","custom","options","option","Footer","Button","variant","disabled","Article","article","target","rel","href","Card","styles","Img","src","Title","categories","about","school","socialisation","behaviour","health","family","support","books","contact","ArticleList","useState","articles","setArticles","querySnapshot","resultArticles","data","map","key","Articles","c","to","Graphs","props","selected","setSelected","d","x","Date","getTime","y","count","sort","a","b","xType","width","height","title","Calendar","loaded","setLoaded","todaysHistoryIncluded","setTodaysHistoryIncluded","days","setDays","minDay","setMinDay","maxDay","setMaxDay","setName","localStorageResult","localStorage","getItem","resultDays","dateString","attention","communication","difficultBehaviour","overallMood","sleepQuality","socialInteraction","localeCompare","filter","toISOString","substr","length","startDate","endDate","classForValue","horizontal","onClick","Question","question","info","onSelect","show","setShow","useRef","handleSelect","index","Group","Label","Overlay","current","placement","Tooltip","icon","faTired","size","faFrown","faMeh","faSmile","faLaugh","environmentalInfo","min","max","otherComments","Entry","location","useLocation","setData","hash","substring","submittedDate","submitEntry","faLongArrowAltLeft","goBack","as","i","TopBar","isDoctor","Navbar","bg","Brand","style","color","faSearch","faSignOutAlt","HomeWrapper","isDoc","setIsDoc","signedIn","setSignedIn","pathname","includes","Nav","justify","Item","children","Login","removeItem","signInWithEmailAndPassword","t","setTimeout","bind","v","id","placeholder","DropdownButton","Dropdown","Register","profileDataState","profileData","registration","rest","doRegister","Profile","userData","setUserData","PrivateRoute","setUser","RegisterDoc","doRegisterDoc","Patient","ListGroup","setItem","window","Patients","patients","setPatients","patientsQuery","p","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.dd4887d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"article_article__2bJ1V\",\"image\":\"article_image__wLPGr\"};","import firebase from \"firebase\";\r\nimport React from \"react\";\r\n\r\nconst config ={\r\n  apiKey: \"AIzaSyDlYaYomTt3oU8fvlL8fBDt81gAzE4dLy0\",\r\n  authDomain: \"codebrew-2020-8141c.firebaseapp.com\",\r\n  databaseURL: \"https://codebrew-2020-8141c.firebaseio.com\",\r\n  projectId: \"codebrew-2020-8141c\",\r\n  storageBucket: \"codebrew-2020-8141c.appspot.com\",\r\n  messagingSenderId: \"602894421608\",\r\n  appId: \"1:602894421608:web:f9a8d137e066808cf8f5dd\",\r\n};\r\n\r\nexport class Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n\r\n    this._auth = firebase.auth();\r\n    this._firestore = firebase.firestore();\r\n    this._storage = firebase.storage().ref();\r\n    this._user = null;\r\n  }\r\n\r\n  get auth() {\r\n    return this._auth;\r\n  }\r\n\r\n  get user() {\r\n    if (this._user !== null) {\r\n      return this._user;\r\n    }\r\n\r\n    this._user = new Promise((resolve, reject) => {\r\n       const unsubscribe = this.auth.onAuthStateChanged(user => {\r\n\r\n          unsubscribe();\r\n          resolve(user);\r\n       }, reject);\r\n    });\r\n\r\n    return this._user;\r\n  }\r\n\r\n  get persistenceSetting() {\r\n    return firebase.auth.Auth.Persistence.LOCAL;\r\n  }\r\n\r\n  get firestore() {\r\n    return this._firestore;\r\n  }\r\n\r\n  get storage() {\r\n    return this._storage;\r\n  }\r\n\r\n  async submitArticle(values) {\r\n    return this.storage.child(values.name).put(values.image)\r\n      .then(snapshot => snapshot.ref.getDownloadURL())\r\n      .then(url => {\r\n        return this.firestore\r\n          .collection(\"articles\").add({\r\n            name: values.name,\r\n            url: values.url,\r\n            category: values.category.value,\r\n            image: url,\r\n          });\r\n      });\r\n  }\r\n\r\n  async submitEntry(date, values) {\r\n    const user = await this.user;\r\n\r\n    console.log(user.email)\r\n\r\n    const querySnapshot = await this.firestore.collection(\"entries\").where(\"time\", \"==\", date).where(\"user\", \"==\", user.email).get()\r\n    querySnapshot.forEach((doc)=> {\r\n      doc.ref.delete();\r\n    })\r\n\r\n    return this.firestore\r\n      .collection(\"entries\").add({\r\n        user: user.email,\r\n        time: date,\r\n        ...values,\r\n      });\r\n  }\r\n\r\n  async signOut() {\r\n    await this.auth.signOut()\r\n    this._user = null;\r\n  }\r\n\r\n  doRegister(email, password, name, age, diagnosis, history, behaviourManagement) {\r\n    return this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return this.firestore.collection(\"users\").add({\r\n          email,\r\n          name,\r\n          age,\r\n          diagnosis,\r\n          history,\r\n          \"isDoc\" : false\r\n        })\r\n      })\r\n      .then(() => {\r\n        if (behaviourManagement !== undefined) {\r\n          return this.storage\r\n            .child(`${email}-behaviour`)\r\n            .put(behaviourManagement);\r\n        }\r\n      });\r\n  }\r\n\r\n  doRegisterDoc(email, password, name) {\r\n    return this.auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          return this.firestore.collection(\"users\").add({\r\n            email,\r\n            name,\r\n            \"isDoc\" : true\r\n          })\r\n        })\r\n  }\r\n}\r\n\r\nexport const FirebaseContext = React.createContext(null);\r\n","import bsCustomFileInput from \"bs-custom-file-input\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport * as yup from \"yup\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  url: yup.string().url().required(),\r\n  category: yup.object().shape({\r\n    value: yup.string().required(),\r\n    label: yup.string().required(),\r\n  }).required(),\r\n});\r\n\r\nconst selectOptions = [\r\n  { value: \"about\", label: \"About Autism\" },\r\n  { value: \"school\", label: \"School\" },\r\n  { value: \"socialisation\", label: \"Socialisation and Communication\" },\r\n  { value: \"behaviour\", label: \"Behaviour\" },\r\n  { value: \"health\", label: \"Your Child's Health\" },\r\n  { value: \"family\", label: \"Family and Carers\" },\r\n  { value: \"support\", label: \"Support\" },\r\n  { value: \"books\", label: \"Books\" },\r\n  { value: \"contact\", label: \"Get in Contact\" },\r\n];\r\n\r\nexport const AddArticle = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    bsCustomFileInput.init()\r\n  }, [])\r\n\r\n  const handleSubmit = (values) => {\r\n    return firebase.submitArticle(values)\r\n      .then(() => {\r\n        history.push(\"/articles\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        url: \"\",\r\n        category: selectOptions[0],\r\n      }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={FormSchema}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n          values,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header>Add Article</Modal.Header>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Article Name\" />\r\n              <FormikControl\r\n                name=\"url\"\r\n                type=\"text\"\r\n                label=\"Article URL\" />\r\n              <Form.File\r\n                className=\"mb-3\"\r\n                name=\"image\"\r\n                label=\"Article Image\"\r\n                onChange={(e) => setFieldValue(\"image\", e.currentTarget.files[0])}\r\n                custom />\r\n              <Select\r\n                options={selectOptions}\r\n                value={values.category}\r\n                onChange={option => setFieldValue(\"category\", option)} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>Add Article</Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport styles from \"../styles/article.module.css\";\r\n\r\nexport const Article = ({ article }) => {\r\n  return (\r\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={article.url}>\r\n      <Card className={`ml-3 ${styles.article}`}>\r\n        <Card.Img variant=\"top\" src={article.image} className={styles.image} />\r\n        <Card.Body>\r\n          <Card.Title>{article.name}</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n    </a>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { Article } from \"./article\";\r\n\r\nconst categories = {\r\n  about: \"About Autism\",\r\n  school: \"School\",\r\n  socialisation: \"Socialisation and Communication\",\r\n  behaviour: \"Behaviour\",\r\n  health: \"Your Child's Health\",\r\n  family: \"Family and Carers\",\r\n  support: \"Support\",\r\n  books: \"Books\",\r\n  contact: \"Get in Contact\",\r\n};\r\n\r\nexport const ArticleList = ({ category }) => {\r\n  const [articles, setArticles] = useState([]);\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    firebase.firestore\r\n      .collection(\"articles\").where(\"category\", \"==\", category).get()\r\n      .then(querySnapshot => {\r\n        const resultArticles = [];\r\n\r\n        querySnapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          resultArticles.push(data);\r\n        });\r\n\r\n        setArticles(resultArticles);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      })\r\n  }, [firebase.firestore, category]);\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"ml-3\">{categories[category]}</h4>\r\n      <ScrollMenu\r\n        data={articles.map(article => (\r\n          <Article key={article.name} article={article} />\r\n        ))}/>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ArticleList } from \"./articleList\";\r\n\r\nconst categories = [\r\n  \"about\",\r\n  \"school\",\r\n  \"socialisation\",\r\n  \"behaviour\",\r\n  \"health\",\r\n  \"family\",\r\n  \"support\",\r\n  \"contact\",\r\n];\r\n\r\nexport const Articles = () => {\r\n  return (\r\n    <>\r\n      {\r\n        categories.map(c => (\r\n          <div key={c} className=\"mt-3\">\r\n            <ArticleList category={c} />\r\n          </div>\r\n        ))\r\n      }\r\n      <br></br>\r\n\r\n      <Link to=\"/article\">\r\n        <div className=\"text-center\">\r\n          <Button className=\"ml-auto mb-2 mr-2\">\r\n            Create Article\r\n          </Button>\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, XYPlot } from \"react-vis\";\r\nimport \"react-vis/dist/style.css\";\r\n\r\nconst selectOptions = [\r\n  { value: \"all\", label: \"All\" },\r\n  { value: \"socialInteraction\", label: \"Social Interaction\"},\r\n  { value: \"communication\", label: \"Communication\"},\r\n  { value: \"difficultBehaviour\", label: \"Difficult Behaviour\"},\r\n  { value: \"attention\", label: \"Attention\"},\r\n  { value: \"sleepQuality\", label: \"Sleep Quality\"},\r\n  { value: \"overallMood\", label: \"Overall Mood\"},\r\n];\r\n\r\nexport const Graphs = (props) => {\r\n  const [selected, setSelected] = useState(selectOptions[0]);\r\n\r\n  const data = props.data.map(d => {\r\n    if (selected.value === \"all\") {\r\n      return {\r\n        x: new Date(d.data.time).getTime(),\r\n        y: d.count,\r\n      }\r\n    } else {\r\n      return {\r\n        x: new Date(d.data.time).getTime(),\r\n        y: d.data[selected.value],\r\n      }\r\n    }\r\n  })\r\n\r\n  data.sort((a, b) => a.x - b.x);\r\n\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <h3 className=\"headings\">Trends Over Time</h3>\r\n      <XYPlot xType=\"time\" className=\"ml-3 mr-auto\" width={350} height={300}>\r\n        <HorizontalGridLines />\r\n        <VerticalGridLines />\r\n        <XAxis title=\"X Axis\" />\r\n        <LineSeries data={data} />\r\n      </XYPlot>\r\n      <Select\r\n        className=\"ml-5 mr-5 mb-3\"\r\n        options={selectOptions}\r\n        value={selected}\r\n        onChange={option => setSelected(option)} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport CalendarHeatmap from \"react-calendar-heatmap\";\r\nimport \"../styles/calendar.css\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Graphs } from \"./graphs\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const Calendar = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [todaysHistoryIncluded, setTodaysHistoryIncluded] = useState(false);\r\n  const [days, setDays] = useState([]);\r\n  const [minDay, setMinDay] = useState(\"2020-01-01\");\r\n  const [maxDay, setMaxDay] = useState(\"2020-01-01\");\r\n  const [name, setName] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let localStorageResult = localStorage.getItem(\"userEmail\");\r\n\r\n    firebase.user\r\n      .then(user => {\r\n        let email  = localStorageResult === null ? user.email : localStorageResult;\r\n\r\n        return firebase.firestore.collection(\"users\").where(\"email\", \"==\", email).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          setName(doc.data().name)\r\n        });\r\n      })\r\n\r\n    firebase.user\r\n      .then(user => {\r\n        let email  = localStorageResult === null ? user.email : localStorageResult;\r\n\r\n        return firebase.firestore.collection(\"entries\").where(\"user\", \"==\", email).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        let resultDays = [];\r\n        let minDay = \"9\";\r\n        let maxDay = \"0\";\r\n\r\n        querySnapshot.forEach(doc => {\r\n          const dateString = doc.data().time;\r\n\r\n          if (dateString === \"\") return;\r\n\r\n          resultDays.push({\r\n            data: doc.data(),\r\n            count: doc.data().attention + doc.data().communication + doc.data().difficultBehaviour + doc.data().overallMood + doc.data().sleepQuality + doc.data().socialInteraction,\r\n            date: dateString,\r\n          })\r\n\r\n          minDay = dateString.localeCompare(minDay) === -1 ? dateString : minDay;\r\n          maxDay = dateString.localeCompare(maxDay) === 1 ? dateString : maxDay;\r\n        });\r\n\r\n        setDays(resultDays);\r\n        setMinDay(minDay);\r\n        setMaxDay(maxDay);\r\n        setLoaded(true);\r\n        setTodaysHistoryIncluded(resultDays.filter(d => d.date === new Date().toISOString().substr(0,10) ).length > 0)\r\n      })\r\n  }, [firebase.firestore, firebase.user]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"headings mt-3\">History for {name}</h3>\r\n\r\n      <div className=\"ml-3 mr-0 mt-3 mb-3\">\r\n        <CalendarHeatmap\r\n          startDate={minDay}\r\n          endDate={maxDay}\r\n          classForValue={value => {\r\n            if (!value) {\r\n              return \"color-empty\";\r\n            }\r\n\r\n            if (value.count >= 6 && value.count <= 16) {\r\n              return \"color-scale-red\";\r\n            } else if (value.count >= 17 && value.count <= 18) {\r\n              return \"color-scale-amber\";\r\n            } else if (value.count >= 19 && value.count <= 32) {\r\n              return \"color-scale-green\";\r\n            }\r\n          }}\r\n          values={days}\r\n          horizontal={false}\r\n          onClick={value => {\r\n            console.log(value)\r\n            history.push(`/entry#${value.date}`)\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {loaded && !todaysHistoryIncluded && <Link to=\"/entry\">\r\n        <div className=\"text-center\">\r\n          <Button className=\"ml-auto mb-2 mr-2\">\r\n            Record Today's History\r\n          </Button>\r\n        </div>\r\n      </Link>}\r\n\r\n      <Graphs data={days} />\r\n    </>\r\n  );\r\n};\r\n","import { faFrown, faLaugh, faMeh, faSmile, faTired } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Form, Overlay, Tooltip } from \"react-bootstrap\";\r\nimport styles from \"../styles/question.module.css\";\r\n\r\nexport const Question = ({ question, info, onSelect, value }) => {\r\n  const [selected, setSelected] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (value !== undefined) {\r\n      setSelected(value)\r\n    }\r\n  }, [value])\r\n\r\n  const handleSelect = (index) => {\r\n    setSelected(index);\r\n    onSelect(index);\r\n  };\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label ref={target} onClick={() => setShow(!show)}>{question}</Form.Label>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {(props) => (\r\n          <Tooltip {...props}>\r\n            {info}\r\n          </Tooltip>\r\n        )}\r\n      </Overlay>\r\n      <div className=\"d-flex mt-2 justify-content-around\">\r\n        <FontAwesomeIcon className={selected === 1 ? styles.selected : \"\"} onClick={() => handleSelect(1)} icon={faTired} size=\"lg\" />\r\n        <FontAwesomeIcon className={selected === 2 ? styles.selected : \"\"} onClick={() => handleSelect(2)} icon={faFrown} size=\"lg\" />\r\n        <FontAwesomeIcon className={selected === 3 ? styles.selected : \"\"} onClick={() => handleSelect(3)} icon={faMeh} size=\"lg\" />\r\n        <FontAwesomeIcon className={selected === 4 ? styles.selected : \"\"} onClick={() => handleSelect(4)} icon={faSmile} size=\"lg\" />\r\n        <FontAwesomeIcon className={selected === 5 ? styles.selected : \"\"} onClick={() => handleSelect(5)} icon={faLaugh} size=\"lg\" />\r\n      </div>\r\n    </Form.Group>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { Question } from \"./question\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  environmentalInfo: yup.string().required(\"This is a required field.\"),\r\n  socialInteraction: yup.number().min(1).max(5).required(),\r\n  communication: yup.number().min(1).max(5).required(),\r\n  difficultBehaviour: yup.number().min(1).max(5).required(),\r\n  attention: yup.number().min(1).max(5).required(),\r\n  sleepQuality: yup.number().min(1).max(5).required(),\r\n  overallMood: yup.number().min(1).max(5).required(),\r\n  otherComments: yup.string(),\r\n});\r\n\r\nexport const Entry = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [data, setData] = useState(null);\r\n\r\n  const date = location.hash.substring(1);\r\n\r\n  useEffect(() => {\r\n    firebase.user\r\n      .then(user => {\r\n        let localStorageResult = localStorage.getItem(\"userEmail\");\r\n        let email  = localStorageResult === null ? user.email : localStorageResult;\r\n\r\n        return firebase.firestore.collection(\"entries\").where(\"time\", \"==\", date).where(\"user\", \"==\", email).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data())\r\n          setData(doc.data())\r\n        });\r\n      })\r\n  }, [firebase.firestore, firebase.user, date]);\r\n\r\n  const onSubmit = (values) => {\r\n    var submittedDate = date !== \"\" ? date : new Date().toISOString().substr(0,10)\r\n\r\n    firebase.submitEntry( submittedDate, values)\r\n      .then(() => {\r\n        history.push(\"/tracker\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n\r\n  if (date !== \"\"  && data === null) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        environmentalInfo: data == null ? \"\" : data.environmentalInfo,\r\n        otherComments: data == null ? \"\" : (data.otherComments === undefined ? \"\" : data.otherComments),\r\n        difficultBehaviour: data == null ? \"\" : data.difficultBehaviour,\r\n        attention: data == null ? \"\" : data.attention,\r\n        socialInteraction: data == null ? \"\" : data.socialInteraction,\r\n        communication: data == null ? \"\" : data.communication,\r\n        sleepQuality: data == null ? \"\" : data.sleepQuality,\r\n        overallMood: data == null ? \"\" : data.overallMood,\r\n      }}\r\n      validationSchema={FormSchema}\r\n      onSubmit={onSubmit}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n          values,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header>\r\n              <FontAwesomeIcon className=\"mr-auto\" icon={faLongArrowAltLeft} size=\"lg\" onClick={() => history.goBack()}/>\r\n              <span className=\"text-center\">Date: {date !== \"\" ? date : new Date().toISOString().substr(0,10)}</span>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                as=\"textarea\"\r\n                name=\"environmentalInfo\"\r\n                label=\"What did your child do today?\" />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"socialInteraction\", i)}\r\n                question=\"Social Interaction\"\r\n                info=\"How well did they get on with friends / family / strangers?\"\r\n                value={values.socialInteraction} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"communication\", i)}\r\n                question=\"Communication\"\r\n                info=\"How well did they express themselves today? How well did they listen?\"\r\n                value={values.communication} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"difficultBehaviour\", i)}\r\n                question=\"Difficult Behaviour\"\r\n                info=\"Was their behaviour disruptive and difficult to manage?\"\r\n                value={values.difficultBehaviour}/>\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"attention\", i)}\r\n                question=\"Attention\"\r\n                info=\"How well did they pay attention?\"\r\n                value={values.attention} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"sleepQuality\", i)}\r\n                question=\"Sleep Quality\"\r\n                info=\"How well did they sleep?\"\r\n                value={values.sleepQuality} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"overallMood\", i)}\r\n                question=\"Overall Mood\"\r\n                info=\"Overall, did they have a happy day?\"\r\n                value={values.overallMood} />\r\n              <FormikControl\r\n                as=\"textarea\"\r\n                name=\"otherComments\"\r\n                label=\"Any other comments?\" />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  );\r\n};\r\n","import { faSearch, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nexport const TopBar = ({ isDoctor }) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  const onSignOut = () => {\r\n    firebase\r\n      .signOut()\r\n      .then(() => {\r\n        history.push(\"/login\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"info\">\r\n        <Navbar.Brand href=\"/\">Project Awesome</Navbar.Brand>\r\n\r\n        <div className=\"ml-auto\">\r\n          {\r\n            isDoctor &&\r\n              <Link to=\"/patients\" className=\"mr-3\" style={{color: \"#212529\"}}>\r\n                <FontAwesomeIcon icon={faSearch} size=\"lg\" />\r\n              </Link>\r\n          }\r\n\r\n          <FontAwesomeIcon onClick={onSignOut} icon={faSignOutAlt} size=\"lg\" />\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { TopBar } from \"./topbar\";\r\n\r\nexport const HomeWrapper = (props) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const location = useLocation();\r\n  const [isDoc, setIsDoc] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [signedIn, setSignedIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.user\r\n      .then(user => {\r\n        if (user !== null) {\r\n          return firebase.firestore.collection(\"users\").where(\"email\", \"==\", user.email).get();\r\n        } else {\r\n          return Promise.reject();\r\n        }\r\n      })\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data());\r\n          if (doc.data().isDoc) {\r\n            setIsDoc(true);\r\n          }\r\n          setLoaded(true);\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n        setSignedIn(false);\r\n      });\r\n  }, [firebase.firestore, firebase.user]);\r\n\r\n  if (!signedIn) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (!loaded) {\r\n    return <></>;\r\n  }\r\n\r\n  if (location.pathname.includes(\"articles\") && isDoc) {\r\n    return <Redirect to=\"/patients\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopBar isDoctor={isDoc}/>\r\n\r\n      <Nav justify variant=\"tabs\" >\r\n        {\r\n          !isDoc &&\r\n            <Nav.Item>\r\n              <Link className={`nav-link ${location.pathname.includes(\"articles\") ? \"active\" : \"\"}`} to=\"/articles\">Home</Link>\r\n            </Nav.Item>\r\n        }\r\n        <Nav.Item>\r\n          <Link className={`nav-link ${location.pathname.includes(\"tracker\") || location.pathname.includes(\"entry\") ? \"active\" : \"\"}`} to=\"/tracker\">Tracker</Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Link className={`nav-link ${location.pathname.includes(\"profile\") ? \"active\" : \"\"}`} to=\"/profile\">Profile</Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n","import { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport React, { useContext } from \"react\";\r\nimport { Button, Dropdown, DropdownButton, Form, Modal } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nfunction delay(t, v) {\r\n  return new Promise(resolve => {\r\n      setTimeout(resolve.bind(null, v), t)\r\n  });\r\n}\r\n\r\nconst FormSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nexport const Login = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = ({ email, password }) => {\r\n    localStorage.removeItem(\"userEmail\");\r\n\r\n    firebase.auth.signInWithEmailAndPassword(email, password)\r\n      .then(() => delay(150))\r\n      .then(() => {\r\n        history.push(\"/articles\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={FormSchema}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header>Project Awesome</Modal.Header>\r\n            <img style={{\"width\":\"100%\"}} src='/ProjectAwesome.png'></img>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"email\"\r\n                type=\"email\"\r\n                label=\"Email Address\"\r\n                id=\"inputEmail\"\r\n                placeholder=\"Email Address\" />\r\n              <FormikControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Password\" />\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <DropdownButton title=\"Register\">\r\n                <Dropdown.Item>\r\n                  <Link to=\"/register\" style={{color: \"#212529\"}}>\r\n                    As Caregiver\r\n                  </Link>\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  <Link to=\"/docregister\" style={{color: \"#212529\"}}>\r\n                    As Supporting Professional\r\n                  </Link>\r\n                </Dropdown.Item>\r\n              </DropdownButton>\r\n              <Button className=\"ml-auto\" type=\"submit\" variant=\"success\" disabled={isSubmitting}>Sign In</Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Login;","import bsCustomFileInput from \"bs-custom-file-input\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Button, Card, Form, Modal } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n  name: yup.string().required(),\r\n  age: yup.number().min(1).required(),\r\n  diagnosis: yup.string().required(),\r\n});\r\n\r\nexport const Register = ({ profileData }) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  let profileDataState;\r\n\r\n  if (profileData !== undefined) {\r\n    profileDataState = { name: profileData.name, email: profileData.email, age: profileData.age, diagnosis: profileData.diagnosis, ...profileData.history}\r\n  }\r\n\r\n  const registration = profileData === undefined;\r\n\r\n  useEffect(() => {\r\n    bsCustomFileInput.init()\r\n  }, []);\r\n\r\n  const handleSubmit = ({\r\n    email,\r\n    password,\r\n    name,\r\n    age,\r\n    diagnosis,\r\n    behaviourManagement,\r\n    ...rest\r\n  }) => {\r\n    firebase\r\n      .doRegister(\r\n        email,\r\n        password,\r\n        name,\r\n        age,\r\n        diagnosis,\r\n        rest,\r\n        behaviourManagement\r\n      )\r\n      .then(() => {\r\n        history.push(\"/articles\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        ...profileDataState\r\n      }}\r\n      validationSchema={FormSchema}\r\n      onSubmit={handleSubmit}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {registration && <Modal.Header><h1>Awesome Profile</h1></Modal.Header>}\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"email\"\r\n                type=\"email\"\r\n                label=\"Email\" />\r\n              { registration && <FormikControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\" /> }\r\n              <FormikControl\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Your child's name:\" />\r\n              <FormikControl\r\n                name=\"age\"\r\n                type=\"number\"\r\n                label=\"Your child's age:\"/>\r\n              <FormikControl\r\n                name=\"diagnosis\"\r\n                type=\"text\"\r\n                label=\"Date of Diagnosis: \" />\r\n              <FormikControl\r\n                name=\"NOK\"\r\n                type=\"text\"\r\n                label=\"Name and contact of Parent(s) / Carer(s) / Next of Kin(s) in case of emergency: \" />\r\n              <FormikControl\r\n                name=\"GP\"\r\n                type=\"text\"\r\n                label=\"Name and contact of GP / other health practitioner(s): \" />\r\n              <h3>\r\n                Autism History\r\n              </h3>\r\n              <Card className=\"mb-3\">\r\n                <Card.Header><b>Communication Style</b></Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"receptive\"\r\n                    as=\"select\"\r\n                    label=\"What is their receptive communication style?\">\r\n                    <option>Verbal</option>\r\n                    <option>Non-verbal</option>\r\n                    <option>Visual</option>\r\n                  </FormikControl>\r\n                  <FormikControl\r\n                    name=\"expressive\"\r\n                    as=\"select\"\r\n                    label=\"What is their expressive communication style?\">\r\n                    <option>Verbal</option>\r\n                    <option>Non-verbal</option>\r\n                    <option>Visual</option>\r\n                  </FormikControl>\r\n                  <FormikControl\r\n                    name=\"communicationTool\"\r\n                    type=\"text\"\r\n                    label=\"Does your child use a communication tool? (eg PECS) If so, provide details: \" />\r\n                  <FormikControl\r\n                    name=\"yesNo\"\r\n                    type=\"text\"\r\n                    label=\"How do they say yes/no?\" />\r\n                  <FormikControl\r\n                    name=\"expressPain\"\r\n                    type=\"text\"\r\n                    label=\"How do they express pain?\" />\r\n                  <FormikControl\r\n                    name=\"tipsComm\"\r\n                    type=\"text\"\r\n                    label=\"What are some good approaches for communicating with your child?\" />\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"mb-3\">\r\n                <Card.Header><b>Behaviour</b></Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"stressed\"\r\n                    type=\"text\"\r\n                    label=\"How do you know if they are stressed?\" />\r\n                  <FormikControl\r\n                    name=\"toAvoid\"\r\n                    type=\"text\"\r\n                    label=\"What things trigger or upset your child?\" />\r\n                  <FormikControl\r\n                    name=\"hypersensitive\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have increased or decreased sensitivity to certain stimuli?\" />\r\n                  <FormikControl\r\n                    name=\"aggression\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have a history of agitation/aggression?\" />\r\n                  <FormikControl\r\n                    name=\"banging\"\r\n                    type=\"text\"\r\n                    label=\"Does your child often exhibit behaviours such as head banging, screaming, rocking, flapping, hand wringing or repetitive vocalisations?\" />\r\n                  <FormikControl\r\n                    name=\"comfort\"\r\n                    type=\"text\"\r\n                    label=\"What is the best way to comfort your child?\" />\r\n                  <FormikControl\r\n                  name=\"hospital\"\r\n                  type=\"text\"\r\n                  label=\"How does your child behave at the doctor's / hospital?\" />\r\n                  <p>If they have a Behavioural Management Plan, upload below: </p>\r\n                  <Form.File\r\n                   className=\"mb-3\"\r\n                    name=\"behaviourManagement\"\r\n                    label=\"Behavioural Management Plan\"\r\n                    onChange={(e) => setFieldValue(\"behaviourManagement\", e.currentTarget.files[0])}\r\n                    custom />\r\n                  <FormikControl\r\n                  name=\"foods\"\r\n                  type=\"text\"\r\n                  label=\"What are your child’s favourite foods and beverages?\" />\r\n                  <FormikControl\r\n                    name=\"toys\"\r\n                    type=\"text\"\r\n                    label=\"What type of toys or activities does your child prefer?\" />\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"mb-3\">\r\n                <Card.Header><b>Social Interaction</b></Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"interactAdults\"\r\n                    type=\"text\"\r\n                    label=\"How does your child interact with adults?\" />\r\n                  <FormikControl\r\n                    name=\"interactChildren\"\r\n                    type=\"text\"\r\n                    label=\"How does your child interact with other children?\" />\r\n                  <FormikControl\r\n                    name=\"eyeContact\"\r\n                    type=\"text\"\r\n                    label=\"Does your child avoid eye contact or being close to other people?\" />\r\n                  <FormikControl\r\n                    name=\"followInstructions\"\r\n                    type=\"text\"\r\n                    label=\"Can your child follow instructions?\" />\r\n                  <FormikControl\r\n                    name=\"focus\"\r\n                    type=\"text\"\r\n                    label=\"How long can your child sit still or focus for?\" />\r\n                </Card.Body>\r\n              </Card>\r\n              <h3>\r\n                Other Medical History\r\n              </h3>\r\n              <FormikControl\r\n                    name=\"medicalConditions\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have any medical conditions?\" />\r\n                  <FormikControl\r\n                    name=\"medications\"\r\n                    type=\"text\"\r\n                    label=\"Does your child take any medications?\" />\r\n                  <FormikControl\r\n                    name=\"allergies\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have any allergies?\" />\r\n                  <FormikControl\r\n                    name=\"pastSurgeries\"\r\n                    type=\"text\"\r\n                    label=\"Any previous surgeries or procedures? If so, how did they manage?\" />\r\n                  <FormikControl\r\n                    name=\"vaccinations\"\r\n                    type=\"text\"\r\n                    label=\"Is your child up to date with their vaccinations?\" />\r\n                  <FormikControl\r\n                    name=\"familyHistory\"\r\n                    type=\"text\"\r\n                    label=\"Does your family have a history of medical conditions?\" />\r\n            </Modal.Body>\r\n            { registration && <Modal.Footer>\r\n              <Link className=\"mr-auto\" to=\"/login\">\r\n                <Button>Sign In</Button>\r\n              </Link>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"success\"\r\n                disabled={isSubmitting}>\r\n                Register\r\n              </Button>\r\n            </Modal.Footer> }\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport \"../styles/profile.css\";\r\nimport { Register } from \"./register\";\r\n\r\nexport const Profile = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    firebase.user\r\n      .then(user => {\r\n        let localStorageResult = localStorage.getItem(\"userEmail\");\r\n        let email = localStorageResult === null ? user.email : localStorageResult;\r\n\r\n        return firebase.firestore.collection(\"users\").where(\"email\", \"==\", email).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data())\r\n          setUserData(doc.data());\r\n        })\r\n      })\r\n  }, [firebase.firestore, firebase.user]);\r\n\r\n  if (userData == null) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <Register profileData={userData} />\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nexport const PrivateRoute = ({ children, ...rest }) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    firebase.user.then(setUser)\r\n  }, [firebase.user])\r\n\r\n  if (user === \"\") {\r\n    return <></>;\r\n  }\r\n\r\n  if (user !== null) {\r\n    return (\r\n      <Route {...rest}>\r\n        {children}\r\n      </Route>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n","import bsCustomFileInput from \"bs-custom-file-input\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nexport const RegisterDoc = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    bsCustomFileInput.init()\r\n  }, []);\r\n\r\n  const handleSubmit = ({\r\n    email,\r\n    password,\r\n    name\r\n  }) => {\r\n    firebase\r\n      .doRegisterDoc(\r\n        email,\r\n        password,\r\n        name\r\n      )\r\n      .then(() => {\r\n        history.push(\"/patients\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n      }}\r\n      onSubmit={handleSubmit}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header><h1>Awesome Profile</h1></Modal.Header>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"email\"\r\n                type=\"email\"\r\n                label=\"Email\" />\r\n              <FormikControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\" />\r\n              <FormikControl\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Full Name:\" />\r\n              <FormikControl\r\n                name=\"institution\"\r\n                type=\"text\"\r\n                label=\"Institution:\" />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Link className=\"mr-auto\" to=\"/login\">\r\n                <Button>Sign In</Button>\r\n              </Link>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"success\"\r\n                disabled={isSubmitting}>\r\n                Register\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nexport const Patient = ({ name, email }) => {\r\n  return (\r\n    <ListGroup.Item onClick={() => {\r\n      localStorage.setItem(\"userEmail\", email);\r\n      window.location.href = \"/tracker\";\r\n    }}>{name}</ListGroup.Item>\r\n  )\r\n};","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { Patient } from \"./patient\";\r\nimport { TopBar } from \"./topbar\";\r\n\r\nexport const Patients = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase.user\r\n      .then(user => {\r\n        return firebase.firestore.collection(\"users\").where(\"isDoc\", \"==\", false).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        const patientsQuery = [];\r\n\r\n        querySnapshot.forEach(doc => {\r\n          patientsQuery.push(doc.data())\r\n        })\r\n\r\n        setPatients(patientsQuery);\r\n      })\r\n  }, [firebase.firestore, firebase.user]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <TopBar isDoctor={true} />\r\n      <h3 className=\"headings mt-3\">Patients</h3>\r\n\r\n      <ListGroup>\r\n        {patients.map(p => (\r\n          <Patient key={p.email} name={p.name} email={p.email} />\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { AddArticle } from \"./components/addArticle\";\r\nimport { Articles } from \"./components/articles\";\r\nimport { Calendar } from \"./components/calendar\";\r\nimport { Entry } from \"./components/entry\";\r\nimport { HomeWrapper } from \"./components/homeWrapper\";\r\nimport { Login } from \"./components/login\";\r\nimport { Profile } from \"./components/profile\";\r\nimport { PrivateRoute } from \"./components/privateRoute\";\r\nimport { Register } from \"./components/register\";\r\nimport { RegisterDoc } from \"./components/registerDoc\";\r\nimport { Patients } from \"./components/patients\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/articles\" />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <Route exact path=\"/docregister\">\r\n            <RegisterDoc />\r\n          </Route>\r\n          <PrivateRoute exact path=\"/patients\" >\r\n            <Patients />\r\n          </PrivateRoute>\r\n          <HomeWrapper>\r\n            <PrivateRoute exact path=\"/articles\" >\r\n              <Articles />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/tracker\" >\r\n              <Calendar />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/profile\" >\r\n              <Profile />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/entry\">\r\n              <Entry />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/article\">\r\n              <AddArticle />\r\n            </PrivateRoute>\r\n          </HomeWrapper>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Firebase, FirebaseContext } from \"./utils/firebase\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"question_selected__uTm2h\",\"change-color\":\"question_change-color__1Oh75\"};"],"sourceRoot":""}