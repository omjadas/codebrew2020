{"version":3,"sources":["styles/article.module.css","utils/firebase.js","components/addArticle.js","components/article.js","components/articleList.js","components/articles.js","components/graphs.js","components/calendar.js","components/question.js","components/entry.js","components/topbar.js","components/homeWrapper.js","components/login.js","components/register.js","components/profile.js","components/privateRoute.js","components/registerDoc.js","components/patient.js","components/patients.js","App.js","serviceWorker.js","index.js","styles/question.module.css"],"names":["module","exports","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","firebase","initializeApp","this","_auth","auth","_firestore","firestore","_storage","storage","ref","_user","values","child","name","put","image","then","snapshot","getDownloadURL","url","collection","add","category","value","date","user","console","log","email","where","get","forEach","doc","delete","time","password","age","diagnosis","history","behaviourManagement","createUserWithEmailAndPassword","undefined","Promise","resolve","reject","unsubscribe","onAuthStateChanged","Auth","Persistence","LOCAL","FirebaseContext","React","createContext","FormSchema","yup","shape","required","label","selectOptions","AddArticle","useContext","useHistory","useEffect","bsCustomFileInput","init","initialValues","onSubmit","submitArticle","push","catch","e","error","validationSchema","isSubmitting","handleSubmit","setFieldValue","Form","Modal","Header","Body","type","File","className","onChange","currentTarget","files","custom","options","option","Footer","Button","variant","disabled","Article","article","target","rel","href","Card","styles","Img","src","Title","categories","about","school","socialisation","behaviour","health","family","support","books","contact","ArticleList","useState","articles","setArticles","querySnapshot","resultArticles","data","map","key","Articles","c","to","Graphs","props","selected","setSelected","d","x","Date","getTime","y","count","sort","a","b","xType","width","height","title","Calendar","loaded","setLoaded","todaysHistoryIncluded","setTodaysHistoryIncluded","days","setDays","minDay","setMinDay","maxDay","setMaxDay","setName","localStorageResult","localStorage","getItem","resultDays","dateString","attention","communication","difficultBehaviour","overallMood","sleepQuality","socialInteraction","localeCompare","filter","toISOString","substr","length","startDate","endDate","classForValue","horizontal","onClick","Question","question","info","onSelect","show","setShow","useRef","handleSelect","index","Group","Label","Overlay","current","placement","Tooltip","icon","faTired","size","faFrown","faMeh","faSmile","faLaugh","environmentalInfo","min","max","otherComments","Entry","location","useLocation","setData","hash","substring","submittedDate","submitEntry","faLongArrowAltLeft","goBack","as","i","TopBar","isDoctor","Navbar","bg","Brand","style","color","faSearch","signOut","faSignOutAlt","HomeWrapper","isDoc","setIsDoc","pathname","includes","Nav","justify","Item","children","Login","removeItem","signInWithEmailAndPassword","t","setTimeout","bind","v","id","placeholder","Register","profileDataState","profileData","registration","rest","doRegister","Profile","userData","setUserData","PrivateRoute","setUser","RegisterDoc","doRegisterDoc","Patient","ListGroup","setItem","window","Patients","patients","setPatients","patientsQuery","p","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.58cb7a76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"article_article__fC5tC\",\"image\":\"article_image__dR5Yu\"};","import firebase from \"firebase\";\nimport React from \"react\";\n\nconst config ={\n  apiKey: \"AIzaSyDlYaYomTt3oU8fvlL8fBDt81gAzE4dLy0\",\n  authDomain: \"codebrew-2020-8141c.firebaseapp.com\",\n  databaseURL: \"https://codebrew-2020-8141c.firebaseio.com\",\n  projectId: \"codebrew-2020-8141c\",\n  storageBucket: \"codebrew-2020-8141c.appspot.com\",\n  messagingSenderId: \"602894421608\",\n  appId: \"1:602894421608:web:f9a8d137e066808cf8f5dd\",\n};\n\nexport class Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n\n    this._auth = firebase.auth();\n    this._firestore = firebase.firestore();\n    this._storage = firebase.storage().ref();\n    this._user = null;\n  }\n\n  get auth() {\n    return this._auth;\n  }\n\n  get user() {\n    if (this._user !== null) {\n      return this._user;\n    }\n\n    this._user = new Promise((resolve, reject) => {\n      \n       const unsubscribe = this.auth.onAuthStateChanged(user => {\n\n          unsubscribe();\n          resolve(user);\n       }, reject);\n    });\n\n    return this._user;\n  }\n\n  get persistenceSetting() {\n    return firebase.auth.Auth.Persistence.LOCAL;\n  }\n\n  get firestore() {\n    return this._firestore;\n  }\n\n  get storage() {\n    return this._storage;\n  }\n\n  async submitArticle(values) {\n    return this.storage.child(values.name).put(values.image)\n      .then(snapshot => snapshot.ref.getDownloadURL())\n      .then(url => {\n        return this.firestore\n          .collection(\"articles\").add({\n            name: values.name,\n            url: values.url,\n            category: values.category.value,\n            image: url,\n          });\n      });\n  }\n\n  async submitEntry(date, values) {\n    const user = await this.user;\n\n    console.log(user.email)\n\n    const querySnapshot = await this.firestore.collection(\"entries\").where(\"time\", \"==\", date).where(\"user\", \"==\", user.email).get()\n    querySnapshot.forEach((doc)=> {\n      doc.ref.delete();\n    })\n\n    return this.firestore\n      .collection(\"entries\").add({\n        user: user.email,\n        time: date,\n        ...values,\n      });\n  }\n\n  doRegister(email, password, name, age, diagnosis, history, behaviourManagement) {\n    return this.auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        return this.firestore.collection(\"users\").add({\n          email,\n          name,\n          age,\n          diagnosis,\n          history,\n          \"isDoc\" : false\n        })\n      })\n      .then(() => {\n        if (behaviourManagement !== undefined) {\n          return this.storage\n            .child(`${email}-behaviour`)\n            .put(behaviourManagement);\n        }\n      });\n  }\n\n  doRegisterDoc(email, password, name) {\n    return this.auth\n        .createUserWithEmailAndPassword(email, password)\n        .then(() => {\n          return this.firestore.collection(\"users\").add({\n            email,\n            name,\n            \"isDoc\" : true\n          })\n        })\n  }\n}\n\nexport const FirebaseContext = React.createContext(null);\n","import bsCustomFileInput from \"bs-custom-file-input\";\nimport { Formik } from \"formik\";\nimport { FormikControl } from \"formik-react-bootstrap\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport * as yup from \"yup\";\nimport { FirebaseContext } from \"../utils/firebase\";\n\nconst FormSchema = yup.object().shape({\n  name: yup.string().required(),\n  url: yup.string().url().required(),\n  category: yup.object().shape({\n    value: yup.string().required(),\n    label: yup.string().required(),\n  }).required(),\n});\n\nconst selectOptions = [\n  { value: \"about\", label: \"About Autism\" },\n  { value: \"school\", label: \"School\" },\n  { value: \"socialisation\", label: \"Socialisation and Communication\" },\n  { value: \"behaviour\", label: \"Behaviour\" },\n  { value: \"health\", label: \"Your Child's Health\" },\n  { value: \"family\", label: \"Family and Carers\" },\n  { value: \"support\", label: \"Support\" },\n  { value: \"books\", label: \"Books\" },\n  { value: \"contact\", label: \"Get in Contact\" },\n];\n\nexport const AddArticle = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    bsCustomFileInput.init()\n  }, [])\n\n  const handleSubmit = (values) => {\n    return firebase.submitArticle(values)\n      .then(() => {\n        history.push(\"/articles\");\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        url: \"\",\n        category: selectOptions[0],\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={FormSchema}>\n      {\n        ({\n          isSubmitting,\n          handleSubmit,\n          setFieldValue,\n          values,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header>Add Article</Modal.Header>\n            <Modal.Body>\n              <FormikControl\n                name=\"name\"\n                type=\"text\"\n                label=\"Article Name\" />\n              <FormikControl\n                name=\"url\"\n                type=\"text\"\n                label=\"Article URL\" />\n              <Form.File\n                className=\"mb-3\"\n                name=\"image\"\n                label=\"Article Image\"\n                onChange={(e) => setFieldValue(\"image\", e.currentTarget.files[0])}\n                custom />\n              <Select\n                options={selectOptions}\n                value={values.category}\n                onChange={option => setFieldValue(\"category\", option)} />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>Add Article</Button>\n            </Modal.Footer>\n          </Form>\n        )\n      }\n    </Formik>\n  )\n};\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport styles from \"../styles/article.module.css\";\n\nexport const Article = ({ article }) => {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={article.url}>\n      <Card className={`ml-3 ${styles.article}`}>\n        <Card.Img variant=\"top\" src={article.image} className={styles.image} />\n        <Card.Body>\n          <Card.Title>{article.name}</Card.Title>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport { Article } from \"./article\";\n\nconst categories = {\n  about: \"About Autism\",\n  school: \"School\",\n  socialisation: \"Socialisation and Communication\",\n  behaviour: \"Behaviour\",\n  health: \"Your Child's Health\",\n  family: \"Family and Carers\",\n  support: \"Support\",\n  books: \"Books\",\n  contact: \"Get in Contact\",\n};\n\nexport const ArticleList = ({ category }) => {\n  const [articles, setArticles] = useState([]);\n  const firebase = useContext(FirebaseContext);\n\n  useEffect(() => {\n    firebase.firestore\n      .collection(\"articles\").where(\"category\", \"==\", category).get()\n      .then(querySnapshot => {\n        const resultArticles = [];\n\n        querySnapshot.forEach(doc => {\n          const data = doc.data();\n          resultArticles.push(data);\n        });\n\n        setArticles(resultArticles);\n      })\n      .catch(e => {\n        console.error(e);\n      })\n  }, [firebase.firestore, category]);\n\n  return (\n    <>\n      <h4 className=\"ml-3\">{categories[category]}</h4>\n      <ScrollMenu\n        data={articles.map(article => (\n          <Article key={article.name} article={article} />\n        ))}/>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { ArticleList } from \"./articleList\";\n\nconst categories = [\n  \"about\",\n  \"school\",\n  \"socialisation\",\n  \"behaviour\",\n  \"health\",\n  \"family\",\n  \"support\",\n  \"contact\",\n];\n\nexport const Articles = () => {\n  return (\n    <>\n      {\n        categories.map(c => (\n          <div key={c} className=\"mt-3\">\n            <ArticleList category={c} />\n          </div>\n        ))\n      }\n      <br></br>\n\n      <Link to=\"/article\">\n        <div className=\"text-center\">\n          <Button className=\"ml-auto mb-2 mr-2\">\n            Create Article\n          </Button>\n        </div>\n      </Link>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, XYPlot } from \"react-vis\";\nimport \"react-vis/dist/style.css\";\n\nconst selectOptions = [\n  { value: \"all\", label: \"All\" },\n  { value: \"socialInteraction\", label: \"Social Interaction\"},\n  { value: \"communication\", label: \"Communication\"},\n  { value: \"difficultBehaviour\", label: \"Difficult Behaviour\"},\n  { value: \"attention\", label: \"Attention\"},\n  { value: \"sleepQuality\", label: \"Sleep Quality\"},\n  { value: \"overallMood\", label: \"Overall Mood\"},\n];\n\nexport const Graphs = (props) => {\n  const [selected, setSelected] = useState(selectOptions[0]);\n\n  const data = props.data.map(d => {\n    if (selected.value === \"all\") {\n      return {\n        x: new Date(d.data.time).getTime(),\n        y: d.count,\n      }\n    } else {\n      return {\n        x: new Date(d.data.time).getTime(),\n        y: d.data[selected.value],\n      }\n    }\n  })\n\n  data.sort((a, b) => a.x - b.x);\n\n  return (\n    <>\n      <br></br>\n      <h3 className=\"headings\">Trends Over Time</h3>\n      <XYPlot xType=\"time\" className=\"ml-3 mr-auto\" width={350} height={300}>\n        <HorizontalGridLines />\n        <VerticalGridLines />\n        <XAxis title=\"X Axis\" />\n        <LineSeries data={data} />\n      </XYPlot>\n      <Select\n        className=\"ml-5 mr-5 mb-3\"\n        options={selectOptions}\n        value={selected}\n        onChange={option => setSelected(option)} />\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport \"../styles/calendar.css\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Graphs } from \"./graphs\";\nimport { Button } from \"react-bootstrap\";\n\nexport const Calendar = () => {\n  const firebase = useContext(FirebaseContext);\n  const [loaded, setLoaded] = useState(false);\n  const [todaysHistoryIncluded, setTodaysHistoryIncluded] = useState(false);\n  const [days, setDays] = useState([]);\n  const [minDay, setMinDay] = useState(\"2020-01-01\");\n  const [maxDay, setMaxDay] = useState(\"2020-01-01\");\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    let localStorageResult = localStorage.getItem(\"userEmail\");\n\n    firebase.user\n      .then(user => {\n        let email  = localStorageResult === null ? user.email : localStorageResult;\n\n        return firebase.firestore.collection(\"users\").where(\"email\", \"==\", email).get();\n      })\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          setName(doc.data().name)\n        });\n      })\n\n    firebase.user\n      .then(user => {\n        let email  = localStorageResult === null ? user.email : localStorageResult;\n\n        return firebase.firestore.collection(\"entries\").where(\"user\", \"==\", email).get();\n      })\n      .then(querySnapshot => {\n        let resultDays = [];\n        let minDay = \"9\";\n        let maxDay = \"0\";\n\n        querySnapshot.forEach(doc => {\n          const dateString = doc.data().time;\n\n          if (dateString === \"\") return;\n\n          resultDays.push({\n            data: doc.data(),\n            count: doc.data().attention + doc.data().communication + doc.data().difficultBehaviour + doc.data().overallMood + doc.data().sleepQuality + doc.data().socialInteraction,\n            date: dateString,\n          })\n\n          minDay = dateString.localeCompare(minDay) === -1 ? dateString : minDay;\n          maxDay = dateString.localeCompare(maxDay) === 1 ? dateString : maxDay;\n        });\n\n        setDays(resultDays);\n        setMinDay(minDay);\n        setMaxDay(maxDay);\n        setLoaded(true);\n        setTodaysHistoryIncluded(resultDays.filter(d => d.date === new Date().toISOString().substr(0,10) ).length > 0)\n      })\n  }, [firebase.firestore, firebase.user]);\n\n  return (\n    <>\n      <h3 className=\"headings mt-3\">History for {name}</h3>\n\n      <div className=\"ml-3 mr-0 mt-3 mb-3\">\n        <CalendarHeatmap\n          startDate={minDay}\n          endDate={maxDay}\n          classForValue={value => {\n            if (!value) {\n              return \"color-empty\";\n            }\n\n            if (value.count >= 6 && value.count <= 16) {\n              return \"color-scale-red\";\n            } else if (value.count >= 17 && value.count <= 18) {\n              return \"color-scale-amber\";\n            } else if (value.count >= 19 && value.count <= 32) {\n              return \"color-scale-green\";\n            }\n          }}\n          values={days}\n          horizontal={false}\n          onClick={value => {\n            console.log(value)\n            history.push(`/entry#${value.date}`)\n          }}\n        />\n      </div>\n\n      {loaded && !todaysHistoryIncluded && <Link to=\"/entry\">\n        <div className=\"text-center\">\n          <Button className=\"ml-auto mb-2 mr-2\">\n            Record Today's History\n          </Button>\n        </div>\n      </Link>}\n\n      <Graphs data={days} />\n    </>\n  );\n};\n","import { faFrown, faLaugh, faMeh, faSmile, faTired } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Form, Overlay, Tooltip } from \"react-bootstrap\";\nimport styles from \"../styles/question.module.css\";\n\nexport const Question = ({ question, info, onSelect, value }) => {\n  const [selected, setSelected] = useState(null);\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n\n  useEffect(() => {\n    if (value !== undefined) {\n      setSelected(value)\n    }\n  }, [value])\n\n  const handleSelect = (index) => {\n    setSelected(index);\n    onSelect(index);\n  };\n\n  return (\n    <Form.Group>\n      <Form.Label ref={target} onClick={() => setShow(!show)}>{question}</Form.Label>\n      <Overlay target={target.current} show={show} placement=\"right\">\n        {(props) => (\n          <Tooltip {...props}>\n            {info}\n          </Tooltip>\n        )}\n      </Overlay>\n      <div className=\"d-flex mt-2 justify-content-around\">\n        <FontAwesomeIcon className={selected === 1 ? styles.selected : \"\"} onClick={() => handleSelect(1)} icon={faTired} size=\"lg\" />\n        <FontAwesomeIcon className={selected === 2 ? styles.selected : \"\"} onClick={() => handleSelect(2)} icon={faFrown} size=\"lg\" />\n        <FontAwesomeIcon className={selected === 3 ? styles.selected : \"\"} onClick={() => handleSelect(3)} icon={faMeh} size=\"lg\" />\n        <FontAwesomeIcon className={selected === 4 ? styles.selected : \"\"} onClick={() => handleSelect(4)} icon={faSmile} size=\"lg\" />\n        <FontAwesomeIcon className={selected === 5 ? styles.selected : \"\"} onClick={() => handleSelect(5)} icon={faLaugh} size=\"lg\" />\n      </div>\n    </Form.Group>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { FormikControl } from \"formik-react-bootstrap\";\nimport * as yup from \"yup\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport { Question } from \"./question\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst FormSchema = yup.object().shape({\n  environmentalInfo: yup.string().required(\"This is a required field.\"),\n  socialInteraction: yup.number().min(1).max(5).required(),\n  communication: yup.number().min(1).max(5).required(),\n  difficultBehaviour: yup.number().min(1).max(5).required(),\n  attention: yup.number().min(1).max(5).required(),\n  sleepQuality: yup.number().min(1).max(5).required(),\n  overallMood: yup.number().min(1).max(5).required(),\n  otherComments: yup.string(),\n});\n\nexport const Entry = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n  const location = useLocation();\n  const [data, setData] = useState(null);\n\n  const date = location.hash.substring(1);\n\n  useEffect(() => {\n    firebase.user\n      .then(user => {\n        let localStorageResult = localStorage.getItem(\"userEmail\");\n        let email  = localStorageResult === null ? user.email : localStorageResult;\n\n        return firebase.firestore.collection(\"entries\").where(\"time\", \"==\", date).where(\"user\", \"==\", email).get();\n      })\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          console.log(doc.data())\n          setData(doc.data())\n        });\n      })\n  }, [firebase.firestore, firebase.user, date]);\n\n  const onSubmit = (values) => {\n    var submittedDate = date !== \"\" ? date : new Date().toISOString().substr(0,10)\n\n    firebase.submitEntry( submittedDate, values)\n      .then(() => {\n        history.push(\"/tracker\");\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n\n  if (date !== \"\"  && data === null) {\n    return <></>;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        environmentalInfo: data == null ? \"\" : data.environmentalInfo,\n        otherComments: data == null ? \"\" : (data.otherComments === undefined ? \"\" : data.otherComments),\n        difficultBehaviour: data == null ? \"\" : data.difficultBehaviour,\n        attention: data == null ? \"\" : data.attention,\n        socialInteraction: data == null ? \"\" : data.socialInteraction,\n        communication: data == null ? \"\" : data.communication,\n        sleepQuality: data == null ? \"\" : data.sleepQuality,\n        overallMood: data == null ? \"\" : data.overallMood,\n      }}\n      validationSchema={FormSchema}\n      onSubmit={onSubmit}>\n      {\n        ({\n          isSubmitting,\n          handleSubmit,\n          setFieldValue,\n          values,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header>\n              <FontAwesomeIcon className=\"mr-auto\" icon={faLongArrowAltLeft} size=\"lg\" onClick={() => history.goBack()}/>\n              <span className=\"text-center\">Date: {date !== \"\" ? date : new Date().toISOString().substr(0,10)}</span>\n            </Modal.Header>\n            <Modal.Body>\n              <FormikControl\n                as=\"textarea\"\n                name=\"environmentalInfo\"\n                label=\"What did your child do today?\" />\n              <Question\n                onSelect={(i) => setFieldValue(\"socialInteraction\", i)}\n                question=\"Social Interaction\"\n                info=\"How well did they get on with friends / family / strangers?\"\n                value={values.socialInteraction} />\n              <Question\n                onSelect={(i) => setFieldValue(\"communication\", i)}\n                question=\"Communication\"\n                info=\"How well did they express themselves today? How well did they listen?\"\n                value={values.communication} />\n              <Question\n                onSelect={(i) => setFieldValue(\"difficultBehaviour\", i)}\n                question=\"Difficult Behaviour\"\n                info=\"Was their behaviour disruptive and difficult to manage?\"\n                value={values.difficultBehaviour}/>\n              <Question\n                onSelect={(i) => setFieldValue(\"attention\", i)}\n                question=\"Attention\"\n                info=\"How well did they pay attention?\"\n                value={values.attention} />\n              <Question\n                onSelect={(i) => setFieldValue(\"sleepQuality\", i)}\n                question=\"Sleep Quality\"\n                info=\"How well did they sleep?\"\n                value={values.sleepQuality} />\n              <Question\n                onSelect={(i) => setFieldValue(\"overallMood\", i)}\n                question=\"Overall Mood\"\n                info=\"Overall, did they have a happy day?\"\n                value={values.overallMood} />\n              <FormikControl\n                as=\"textarea\"\n                name=\"otherComments\"\n                label=\"Any other comments?\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )\n      }\n    </Formik>\n  );\n};\n","import { faSearch, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useContext } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FirebaseContext } from \"../utils/firebase\";\n\nexport const TopBar = ({ isDoctor }) => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  const onSignOut = () => {\n    firebase.auth\n      .signOut()\n      .then(() => {\n        history.push(\"/login\");\n      });\n  };\n\n  return (\n    <>\n      <Navbar bg=\"info\">\n        <Navbar.Brand href=\"/\">Project Awesome</Navbar.Brand>\n\n        <div className=\"ml-auto\">\n          {\n            isDoctor &&\n              <Link to=\"/patients\" className=\"mr-3\" style={{color: \"#212529\"}}>\n                <FontAwesomeIcon icon={faSearch} size=\"lg\" />\n              </Link>\n          }\n\n          <FontAwesomeIcon onClick={onSignOut} icon={faSignOutAlt} size=\"lg\" />\n        </div>\n      </Navbar>\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport { TopBar } from \"./topbar\";\n\nexport const HomeWrapper = (props) => {\n  const firebase = useContext(FirebaseContext);\n  const location = useLocation();\n  const [isDoc, setIsDoc] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    firebase.user\n      .then(user => {\n        return firebase.firestore.collection(\"users\").where(\"email\", \"==\", user.email).get();\n      })\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          if (doc.data().isDoc) {\n            setIsDoc(true)\n          }\n          setLoaded(true)\n        });\n      })\n  }, [firebase.firestore, firebase.user]);\n\n  if (!loaded) {\n    return (<></>)\n  }\n\n  if (location.pathname.includes(\"articles\") && isDoc) {\n   return( <Redirect to=\"/patients\" /> )\n  }\n\n  return (\n    <>\n      <TopBar isDoctor={isDoc}/>\n\n      <Nav justify variant=\"tabs\" >\n        {\n          !isDoc &&\n            <Nav.Item>\n              <Link className={`nav-link ${location.pathname.includes(\"articles\") ? \"active\" : \"\"}`} to=\"/articles\">Home</Link>\n            </Nav.Item>\n        }\n        <Nav.Item>\n          <Link className={`nav-link ${location.pathname.includes(\"tracker\") || location.pathname.includes(\"entry\") ? \"active\" : \"\"}`} to=\"/tracker\">Tracker</Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link className={`nav-link ${location.pathname.includes(\"profile\") ? \"active\" : \"\"}`} to=\"/profile\">Profile</Link>\n        </Nav.Item>\n      </Nav>\n\n      {props.children}\n\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport { Formik } from \"formik\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { FormikControl } from \"formik-react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n\nfunction delay(t, v) {\n  return new Promise(resolve => {\n      setTimeout(resolve.bind(null, v), t)\n  });\n}\n\nconst FormSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport const Login = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  const handleSubmit = ({ email, password }) => {\n    localStorage.removeItem(\"userEmail\");\n\n    firebase.auth.signInWithEmailAndPassword(email, password)\n      .then(() => delay(150))\n      .then(() => {\n        history.push(\"/articles\");\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={FormSchema}>\n      {\n        ({\n          isSubmitting,\n          handleSubmit,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header>Project Awesome</Modal.Header>\n            <Modal.Body>\n              <FormikControl\n                name=\"email\"\n                type=\"email\"\n                label=\"Email Address\"\n                id=\"inputEmail\"\n                placeholder=\"Email Address\" />\n              <FormikControl\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"Password\" />\n            </Modal.Body>\n\n            <div className=\"text-center\">\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>Sign In</Button>\n              <br></br>\n              <br></br>\n              or\n              <br></br>\n              <br></br>\n              <Link to=\"/register\">\n                <Button>\n                  Register as Caregiver\n                </Button>\n              </Link>\n              <br></br>\n              <br></br>\n              <Link to=\"/docregister\">\n                <Button>\n                  Register as Supporting Professional\n                </Button>\n              </Link>\n            </div>\n          </Form>\n        )\n      }\n\n    </Formik>\n  )\n}\n\nexport default Login;","import bsCustomFileInput from \"bs-custom-file-input\";\nimport { Formik } from \"formik\";\nimport { FormikControl } from \"formik-react-bootstrap\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Button, Card, Form, Modal } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { FirebaseContext } from \"../utils/firebase\";\n\nconst FormSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n  name: yup.string().required(),\n  age: yup.number().min(1).required(),\n  diagnosis: yup.string().required(),\n});\n\nexport const Register = ({ profileData }) => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  let profileDataState;\n\n  if (profileData !== undefined) {\n    profileDataState = { name: profileData.name, email: profileData.email, age: profileData.age, diagnosis: profileData.diagnosis, ...profileData.history}\n  }\n\n  const registration = profileData === undefined;\n\n  useEffect(() => {\n    bsCustomFileInput.init()\n  }, []);\n\n  const handleSubmit = ({\n    email,\n    password,\n    name,\n    age,\n    diagnosis,\n    behaviourManagement,\n    ...rest\n  }) => {\n    firebase\n      .doRegister(\n        email,\n        password,\n        name,\n        age,\n        diagnosis,\n        rest,\n        behaviourManagement\n      )\n      .then(() => {\n        history.push(\"/articles\");\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        ...profileDataState\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}>\n      {\n        ({\n          isSubmitting,\n          handleSubmit,\n          setFieldValue,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            {registration && <Modal.Header><h1>Awesome Profile</h1></Modal.Header>}\n            <Modal.Body>\n              <FormikControl\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\" />\n              { registration && <FormikControl\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\" /> }\n              <FormikControl\n                name=\"name\"\n                type=\"text\"\n                label=\"Your child's name:\" />\n              <FormikControl\n                name=\"age\"\n                type=\"number\"\n                label=\"Your child's age:\"/>\n              <FormikControl\n                name=\"diagnosis\"\n                type=\"text\"\n                label=\"Date of Diagnosis: \" />\n              <FormikControl\n                name=\"NOK\"\n                type=\"text\"\n                label=\"Name and contact of Parent(s) / Carer(s) / Next of Kin(s) in case of emergency: \" />\n              <FormikControl\n                name=\"GP\"\n                type=\"text\"\n                label=\"Name and contact of GP / other health practitioner(s): \" />\n              <h3>\n                Autism History\n              </h3>\n              <Card className=\"mb-3\">\n                <Card.Header><b>Communication Style</b></Card.Header>\n                <Card.Body>\n                  <FormikControl\n                    name=\"receptive\"\n                    as=\"select\"\n                    label=\"What is their receptive communication style?\">\n                    <option>Verbal</option>\n                    <option>Non-verbal</option>\n                    <option>Visual</option>\n                  </FormikControl>\n                  <FormikControl\n                    name=\"expressive\"\n                    as=\"select\"\n                    label=\"What is their expressive communication style?\">\n                    <option>Verbal</option>\n                    <option>Non-verbal</option>\n                    <option>Visual</option>\n                  </FormikControl>\n                  <FormikControl\n                    name=\"communicationTool\"\n                    type=\"text\"\n                    label=\"Does your child use a communication tool? (eg PECS) If so, provide details: \" />\n                  <FormikControl\n                    name=\"yesNo\"\n                    type=\"text\"\n                    label=\"How do they say yes/no?\" />\n                  <FormikControl\n                    name=\"expressPain\"\n                    type=\"text\"\n                    label=\"How do they express pain?\" />\n                  <FormikControl\n                    name=\"tipsComm\"\n                    type=\"text\"\n                    label=\"What are some good approaches for communicating with your child?\" />\n                </Card.Body>\n              </Card>\n              <Card className=\"mb-3\">\n                <Card.Header><b>Behaviour</b></Card.Header>\n                <Card.Body>\n                  <FormikControl\n                    name=\"stressed\"\n                    type=\"text\"\n                    label=\"How do you know if they are stressed?\" />\n                  <FormikControl\n                    name=\"toAvoid\"\n                    type=\"text\"\n                    label=\"What things trigger or upset your child?\" />\n                  <FormikControl\n                    name=\"hypersensitive\"\n                    type=\"text\"\n                    label=\"Does your child have increased or decreased sensitivity to certain stimuli?\" />\n                  <FormikControl\n                    name=\"aggression\"\n                    type=\"text\"\n                    label=\"Does your child have a history of agitation/aggression?\" />\n                  <FormikControl\n                    name=\"banging\"\n                    type=\"text\"\n                    label=\"Does your child often exhibit behaviours such as head banging, screaming, rocking, flapping, hand wringing or repetitive vocalisations?\" />\n                  <FormikControl\n                    name=\"comfort\"\n                    type=\"text\"\n                    label=\"What is the best way to comfort your child?\" />\n                  <FormikControl\n                  name=\"hospital\"\n                  type=\"text\"\n                  label=\"How does your child behave at the doctor's / hospital?\" />\n                  <p>If they have a Behavioural Management Plan, upload below: </p>\n                  <Form.File\n                   className=\"mb-3\"\n                    name=\"behaviourManagement\"\n                    label=\"Behavioural Management Plan\"\n                    onChange={(e) => setFieldValue(\"behaviourManagement\", e.currentTarget.files[0])}\n                    custom />\n                  <FormikControl\n                  name=\"foods\"\n                  type=\"text\"\n                  label=\"What are your child’s favourite foods and beverages?\" />\n                  <FormikControl\n                    name=\"toys\"\n                    type=\"text\"\n                    label=\"What type of toys or activities does your child prefer?\" />\n                </Card.Body>\n              </Card>\n              <Card className=\"mb-3\">\n                <Card.Header><b>Social Interaction</b></Card.Header>\n                <Card.Body>\n                  <FormikControl\n                    name=\"interactAdults\"\n                    type=\"text\"\n                    label=\"How does your child interact with adults?\" />\n                  <FormikControl\n                    name=\"interactChildren\"\n                    type=\"text\"\n                    label=\"How does your child interact with other children?\" />\n                  <FormikControl\n                    name=\"eyeContact\"\n                    type=\"text\"\n                    label=\"Does your child avoid eye contact or being close to other people?\" />\n                  <FormikControl\n                    name=\"followInstructions\"\n                    type=\"text\"\n                    label=\"Can your child follow instructions?\" />\n                  <FormikControl\n                    name=\"focus\"\n                    type=\"text\"\n                    label=\"How long can your child sit still or focus for?\" />\n                </Card.Body>\n              </Card>\n              <h3>\n                Other Medical History\n              </h3>\n              <FormikControl\n                    name=\"medicalConditions\"\n                    type=\"text\"\n                    label=\"Does your child have any medical conditions?\" />\n                  <FormikControl\n                    name=\"medications\"\n                    type=\"text\"\n                    label=\"Does your child take any medications?\" />\n                  <FormikControl\n                    name=\"allergies\"\n                    type=\"text\"\n                    label=\"Does your child have any allergies?\" />\n                  <FormikControl\n                    name=\"pastSurgeries\"\n                    type=\"text\"\n                    label=\"Any previous surgeries or procedures? If so, how did they manage?\" />\n                  <FormikControl\n                    name=\"vaccinations\"\n                    type=\"text\"\n                    label=\"Is your child up to date with their vaccinations?\" />\n                  <FormikControl\n                    name=\"familyHistory\"\n                    type=\"text\"\n                    label=\"Does your family have a history of medical conditions?\" />\n            </Modal.Body>\n            { registration && <Modal.Footer>\n              <Link className=\"mr-auto\" to=\"/login\">\n                <Button>Sign In</Button>\n              </Link>\n              <Button\n                type=\"submit\"\n                variant=\"success\"\n                disabled={isSubmitting}>\n                Register\n              </Button>\n            </Modal.Footer> }\n          </Form>\n        )\n      }\n    </Formik>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport \"../styles/profile.css\";\nimport { Register } from \"./register\";\n\nexport const Profile = () => {\n  const firebase = useContext(FirebaseContext);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    firebase.user\n      .then(user => {\n        let localStorageResult = localStorage.getItem(\"userEmail\");\n        let email = localStorageResult === null ? user.email : localStorageResult;\n\n        return firebase.firestore.collection(\"users\").where(\"email\", \"==\", email).get();\n      })\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          console.log(doc.data())\n          setUserData(doc.data());\n        })\n      })\n  }, [firebase.firestore, firebase.user]);\n\n  if (userData == null) {\n    return <></>;\n  }\n\n  return (\n    <Register profileData={userData} />\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { FirebaseContext } from \"../utils/firebase\";\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    firebase.user.then(setUser)\n  }, [firebase.user])\n\n  if (user === \"\") {\n    return <></>;\n  }\n\n  if (user !== null) {\n    return (\n      <Route {...rest}>\n        {children}\n      </Route>\n    );\n  } else {\n    return <Redirect to=\"/login\" />;\n  }\n};\n","import bsCustomFileInput from \"bs-custom-file-input\";\nimport { Formik } from \"formik\";\nimport { FormikControl } from \"formik-react-bootstrap\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FirebaseContext } from \"../utils/firebase\";\n\nexport const RegisterDoc = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    bsCustomFileInput.init()\n  }, []);\n\n  const handleSubmit = ({\n    email,\n    password,\n    name\n  }) => {\n    firebase\n      .doRegisterDoc(\n        email,\n        password,\n        name\n      )\n      .then(() => {\n        history.push(\"/patients\");\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n      }}\n      onSubmit={handleSubmit}>\n      {\n        ({\n          isSubmitting,\n          handleSubmit,\n          setFieldValue,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Modal.Header><h1>Awesome Profile</h1></Modal.Header>\n            <Modal.Body>\n              <FormikControl\n                name=\"email\"\n                type=\"email\"\n                label=\"Email\" />\n              <FormikControl\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\" />\n              <FormikControl\n                name=\"name\"\n                type=\"text\"\n                label=\"Full Name:\" />\n              <FormikControl\n                name=\"institution\"\n                type=\"text\"\n                label=\"Institution:\" />\n            </Modal.Body>\n            <Modal.Footer>\n              <Link className=\"mr-auto\" to=\"/login\">\n                <Button>Sign In</Button>\n              </Link>\n              <Button\n                type=\"submit\"\n                variant=\"success\"\n                disabled={isSubmitting}>\n                Register\n              </Button>\n            </Modal.Footer>\n          </Form>\n        )\n      }\n    </Formik>\n  );\n};\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nexport const Patient = ({ name, email }) => {\n  return (\n    <ListGroup.Item onClick={() => {\n      localStorage.setItem(\"userEmail\", email);\n      window.location.href = \"/tracker\";\n    }}>{name}</ListGroup.Item>\n  )\n};","import React, { useContext, useEffect, useState } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { FirebaseContext } from \"../utils/firebase\";\nimport { Patient } from \"./patient\";\nimport { TopBar } from \"./topbar\";\n\nexport const Patients = () => {\n  const firebase = useContext(FirebaseContext);\n\n  const [patients, setPatients] = useState([]);\n\n  useEffect(() => {\n    firebase.user\n      .then(user => {\n        return firebase.firestore.collection(\"users\").where(\"isDoc\", \"==\", false).get();\n      })\n      .then(querySnapshot => {\n        const patientsQuery = [];\n\n        querySnapshot.forEach(doc => {\n          patientsQuery.push(doc.data())\n        })\n\n        setPatients(patientsQuery);\n      })\n  }, [firebase.firestore, firebase.user]);\n\n\n  return (\n    <>\n      <TopBar isDoctor={true} />\n      <h3 className=\"headings mt-3\">Patients</h3>\n\n      <ListGroup>\n        {patients.map(p => (\n          <Patient name={p.name} email={p.email} />\n        ))}\n      </ListGroup>\n    </>\n  )\n};\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { AddArticle } from \"./components/addArticle\";\nimport { Articles } from \"./components/articles\";\nimport { Calendar } from \"./components/calendar\";\nimport { Entry } from \"./components/entry\";\nimport { HomeWrapper } from \"./components/homeWrapper\";\nimport { Login } from \"./components/login\";\nimport { Profile } from \"./components/profile\";\nimport { PrivateRoute } from \"./components/privateRoute\";\nimport { Register } from \"./components/register\";\nimport { RegisterDoc } from \"./components/registerDoc\";\nimport { Patients } from \"./components/patients\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/articles\" />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route exact path=\"/docregister\">\n            <RegisterDoc />\n          </Route>\n          <PrivateRoute exact path=\"/patients\" >\n            <Patients />\n          </PrivateRoute>\n          <HomeWrapper>\n            <PrivateRoute exact path=\"/articles\" >\n              <Articles />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/tracker\" >\n              <Calendar />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/profile\" >\n              <Profile />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/entry\">\n              <Entry />\n            </PrivateRoute>\n            <PrivateRoute exact path=\"/article\">\n              <AddArticle />\n            </PrivateRoute>\n          </HomeWrapper>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Firebase, FirebaseContext } from \"./utils/firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"question_selected__N8cwa\",\"change-color\":\"question_change-color__1SWY4\"};"],"sourceRoot":""}