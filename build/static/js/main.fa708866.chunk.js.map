{"version":3,"sources":["styles/article.module.css","utils/firebase.js","components/addArticle.js","components/article.js","components/articleList.js","components/articles.js","components/graphs.js","components/calendar.js","components/question.js","components/entry.js","components/homeWrapper.js","components/login.js","components/register.js","components/profile.js","components/privateRoute.js","App.js","serviceWorker.js","index.js","styles/question.module.css"],"names":["module","exports","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","firebase","initializeApp","this","_auth","auth","_firestore","firestore","_storage","storage","ref","_user","values","child","name","put","image","then","snapshot","getDownloadURL","url","collection","add","category","value","user","email","time","Date","toISOString","substr","password","age","diagnosis","history","behaviourManagement","createUserWithEmailAndPassword","undefined","Promise","resolve","reject","unsubscribe","onAuthStateChanged","Auth","Persistence","LOCAL","FirebaseContext","React","createContext","FormSchema","yup","shape","required","label","selectOptions","AddArticle","useContext","useHistory","useEffect","bsCustomFileInput","init","initialValues","onSubmit","submitArticle","push","catch","e","console","error","validationSchema","isSubmitting","handleSubmit","setFieldValue","Form","Modal","Header","Body","type","File","className","onChange","currentTarget","files","custom","options","option","Footer","Button","variant","disabled","Article","article","target","rel","href","Card","styles","Img","src","Title","categories","about","school","socialisation","behaviour","health","family","support","books","contact","ArticleList","useState","articles","setArticles","where","get","querySnapshot","resultArticles","forEach","doc","data","map","key","Articles","c","to","Graphs","props","selected","setSelected","d","x","getTime","y","count","sort","a","b","xType","width","height","title","Calendar","days","setDays","minDay","setMinDay","maxDay","setMaxDay","resultDays","dateString","attention","communication","difficultBehaviour","overallMood","sleepQuality","socialInteraction","date","localeCompare","startDate","endDate","classForValue","horizontal","onClick","Question","question","info","onSelect","show","setShow","useRef","handleSelect","index","Group","Label","Overlay","current","placement","Tooltip","icon","faTired","size","faFrown","faMeh","faSmile","faLaugh","environmentalInfo","min","max","otherComments","Entry","location","useLocation","setData","hash","substring","log","submitEntry","faLongArrowAltLeft","goBack","as","i","ProfileIcon","forwardRef","preventDefault","faUserCircle","HomeWrapper","Navbar","bg","Brand","Dropdown","Toggle","Menu","alignRight","Item","signOut","Nav","justify","pathname","includes","children","Login","setPersistence","persistenceSetting","signInWithEmailAndPassword","id","placeholder","Register","profileData","registration","rest","doRegister","Profile","userData","setUserData","PrivateRoute","setUser","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.fa708866.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"article_article__2bJ1V\",\"image\":\"article_image__wLPGr\"};","import firebase from \"firebase\";\r\nimport React from \"react\";\r\n\r\nconst config ={\r\n  apiKey: \"AIzaSyDlYaYomTt3oU8fvlL8fBDt81gAzE4dLy0\",\r\n  authDomain: \"codebrew-2020-8141c.firebaseapp.com\",\r\n  databaseURL: \"https://codebrew-2020-8141c.firebaseio.com\",\r\n  projectId: \"codebrew-2020-8141c\",\r\n  storageBucket: \"codebrew-2020-8141c.appspot.com\",\r\n  messagingSenderId: \"602894421608\",\r\n  appId: \"1:602894421608:web:f9a8d137e066808cf8f5dd\",\r\n};\r\n\r\nexport class Firebase {\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n\r\n    this._auth = firebase.auth();\r\n    this._firestore = firebase.firestore();\r\n    this._storage = firebase.storage().ref();\r\n    this._user = null;\r\n  }\r\n\r\n  get auth() {\r\n    return this._auth;\r\n  }\r\n\r\n  get user() {\r\n    if (this._user !== null) {\r\n      return this._user;\r\n    }\r\n\r\n    this._user = new Promise((resolve, reject) => {\r\n      \r\n       const unsubscribe = this.auth.onAuthStateChanged(user => {\r\n\r\n          unsubscribe();\r\n          resolve(user);\r\n       }, reject);\r\n    });\r\n\r\n    return this._user;\r\n  }\r\n\r\n  get persistenceSetting() {\r\n    return firebase.auth.Auth.Persistence.LOCAL;\r\n  }\r\n\r\n  get firestore() {\r\n    return this._firestore;\r\n  }\r\n\r\n  get storage() {\r\n    return this._storage;\r\n  }\r\n\r\n  async submitArticle(values) {\r\n    return this.storage.child(values.name).put(values.image)\r\n      .then(snapshot => snapshot.ref.getDownloadURL())\r\n      .then(url => {\r\n        return this.firestore\r\n          .collection(\"articles\").add({\r\n            name: values.name,\r\n            url: values.url,\r\n            category: values.category.value,\r\n            image: url,\r\n          });\r\n      });\r\n  }\r\n\r\n  async submitEntry(values) {\r\n    const user = await this.user;\r\n    return this.firestore\r\n      .collection(\"entries\").add({\r\n        user: user.email,\r\n        time: new Date().toISOString().substr(0,10),\r\n        ...values,\r\n      });\r\n  }\r\n\r\n  doRegister(email, password, name, age, diagnosis, history, behaviourManagement) {\r\n    return this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return this.firestore.collection(\"users\").add({\r\n          email,\r\n          name,\r\n          age,\r\n          diagnosis,\r\n          history,\r\n        })\r\n      })\r\n      .then(() => {\r\n        if (behaviourManagement !== undefined) {\r\n          return this.storage\r\n            .child(`${email}-behaviour`)\r\n            .put(behaviourManagement);\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport const FirebaseContext = React.createContext(null);\r\n","import bsCustomFileInput from \"bs-custom-file-input\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport * as yup from \"yup\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  url: yup.string().url().required(),\r\n  category: yup.object().shape({\r\n    value: yup.string().required(),\r\n    label: yup.string().required(),\r\n  }).required(),\r\n});\r\n\r\nconst selectOptions = [\r\n  { value: \"about\", label: \"About Autism\" },\r\n  { value: \"school\", label: \"School\" },\r\n  { value: \"socialisation\", label: \"Socialisation and Communication\" },\r\n  { value: \"behaviour\", label: \"Behaviour\" },\r\n  { value: \"health\", label: \"Your Child's Health\" },\r\n  { value: \"family\", label: \"Family and Carers\" },\r\n  { value: \"support\", label: \"Support\" },\r\n  { value: \"books\", label: \"Books\" },\r\n  { value: \"contact\", label: \"Get in Contact\" },\r\n];\r\n\r\nexport const AddArticle = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    bsCustomFileInput.init()\r\n  }, [])\r\n\r\n  const handleSubmit = (values) => {\r\n    return firebase.submitArticle(values)\r\n      .then(() => {\r\n        history.push(\"/articles\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        url: \"\",\r\n        category: selectOptions[0],\r\n      }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={FormSchema}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n          values,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header>Add Article</Modal.Header>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Article Name\" />\r\n              <FormikControl\r\n                name=\"url\"\r\n                type=\"text\"\r\n                label=\"Article URL\" />\r\n              <Form.File\r\n                className=\"mb-3\"\r\n                name=\"image\"\r\n                label=\"Article Image\"\r\n                onChange={(e) => setFieldValue(\"image\", e.currentTarget.files[0])}\r\n                custom />\r\n              <Select\r\n                options={selectOptions}\r\n                value={values.category}\r\n                onChange={option => setFieldValue(\"category\", option)} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>Add Article</Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport styles from \"../styles/article.module.css\";\r\n\r\nexport const Article = ({ article }) => {\r\n  return (\r\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={article.url}>\r\n      <Card className={`ml-3 ${styles.article}`}>\r\n        <Card.Img variant=\"top\" src={article.image} className={styles.image} />\r\n        <Card.Body>\r\n          <Card.Title>{article.name}</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n    </a>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { Article } from \"./article\";\r\n\r\nconst categories = {\r\n  about: \"About Autism\",\r\n  school: \"School\",\r\n  socialisation: \"Socialisation and Communication\",\r\n  behaviour: \"Behaviour\",\r\n  health: \"Your Child's Health\",\r\n  family: \"Family and Carers\",\r\n  support: \"Support\",\r\n  books: \"Books\",\r\n  contact: \"Get in Contact\",\r\n};\r\n\r\nexport const ArticleList = ({ category }) => {\r\n  const [articles, setArticles] = useState([]);\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    firebase.firestore\r\n      .collection(\"articles\").where(\"category\", \"==\", category).get()\r\n      .then(querySnapshot => {\r\n        const resultArticles = [];\r\n\r\n        querySnapshot.forEach(doc => {\r\n          const data = doc.data();\r\n          resultArticles.push(data);\r\n        });\r\n\r\n        setArticles(resultArticles);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      })\r\n  }, [firebase.firestore, category]);\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"ml-3\">{categories[category]}</h4>\r\n      <ScrollMenu\r\n        data={articles.map(article => (\r\n          <Article key={article.name} article={article} />\r\n        ))}/>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ArticleList } from \"./articleList\";\r\n\r\nconst categories = [\r\n  \"about\",\r\n  \"school\",\r\n  \"socialisation\",\r\n  \"behaviour\",\r\n  \"health\",\r\n  \"family\",\r\n  \"support\",\r\n  \"books\",\r\n  \"contact\",\r\n];\r\n\r\nexport const Articles = () => {\r\n  return (\r\n    <>\r\n      {\r\n        categories.map(c => (\r\n          <div key={c} className=\"mt-3\">\r\n            <ArticleList category={c} />\r\n          </div>\r\n        ))\r\n      }\r\n      <Link to=\"/article\">\r\n        <div className=\"d-flex w-100\">\r\n          <Button className=\"ml-auto mb-2 mr-2\">\r\n            Create Article\r\n          </Button>\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, XYPlot, YAxis } from \"react-vis\";\r\nimport \"react-vis/dist/style.css\";\r\n\r\nconst selectOptions = [\r\n  { value: \"all\", label: \"All\" },\r\n  { value: \"socialInteraction\", label: \"Social Interaction\"},\r\n  { value: \"communication\", label: \"Communication\"},\r\n  { value: \"difficultBehaviour\", label: \"Difficult Behaviour\"},\r\n  { value: \"attention\", label: \"Attention\"},\r\n  { value: \"sleepQuality\", label: \"Sleep Quality\"},\r\n  { value: \"overallMood\", label: \"Overall Mood\"},\r\n];\r\n\r\nexport const Graphs = (props) => {\r\n  const [selected, setSelected] = useState(selectOptions[0]);\r\n\r\n  const data = props.data.map(d => {\r\n    if (selected.value === \"all\") {\r\n      return {\r\n        x: new Date(d.data.time).getTime(),\r\n        y: d.count,\r\n      }\r\n    } else {\r\n      return {\r\n        x: new Date(d.data.time).getTime(),\r\n        y: d.data[selected.value],\r\n      }\r\n    }\r\n  })\r\n\r\n  data.sort((a, b) => a.x - b.x);\r\n\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <h3 className=\"headings\">Trends Over Time</h3>\r\n      <XYPlot xType=\"time\" className=\"ml-3 mr-auto\" width={350} height={300}>\r\n        <HorizontalGridLines />\r\n        <VerticalGridLines />\r\n        <XAxis title=\"X Axis\" />\r\n        <LineSeries data={data} />\r\n      </XYPlot>\r\n      <Select\r\n        className=\"ml-5 mr-5 mb-3\"\r\n        options={selectOptions}\r\n        value={selected}\r\n        onChange={option => setSelected(option)} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport CalendarHeatmap from 'react-calendar-heatmap';\r\nimport \"../styles/calendar.css\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Graphs } from \"./graphs\";\r\n\r\nexport const Calendar = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const [days, setDays] = useState([]);\r\n  const [minDay, setMinDay] = useState(\"2020-01-01\");\r\n  const [maxDay, setMaxDay] = useState(\"2020-01-01\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    firebase.user\r\n      .then(user => {\r\n        return firebase.firestore.collection(\"entries\").where(\"user\", \"==\", user.email).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        const resultDays = [];\r\n        let minDay = \"9\";\r\n        let maxDay = \"0\";\r\n\r\n        querySnapshot.forEach(doc => {\r\n          const dateString = doc.data().time;\r\n\r\n          resultDays.push({\r\n            data: doc.data(),\r\n            count: doc.data().attention + doc.data().communication + doc.data().difficultBehaviour + doc.data().overallMood + doc.data().sleepQuality + doc.data().socialInteraction,\r\n            date: dateString,\r\n          })\r\n\r\n          minDay = dateString.localeCompare(minDay) === -1 ? dateString : minDay;\r\n          maxDay = dateString.localeCompare(maxDay) === 1 ? dateString : maxDay;\r\n        });\r\n\r\n        setDays(resultDays);\r\n        setMinDay(minDay);\r\n        setMaxDay(maxDay);\r\n\r\n      })\r\n  }, [firebase.firestore, firebase.user]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"headings mt-3\">History</h3>\r\n\r\n      <div className=\"ml-3 mr-0 mt-3 mb-3\">\r\n        <CalendarHeatmap\r\n          startDate={minDay}\r\n          endDate={maxDay}\r\n          classForValue={value => {\r\n            if (!value) {\r\n              return 'color-empty';\r\n            }\r\n\r\n            if (value.count >= 6 && value.count <= 16) {\r\n              return 'color-scale-red';\r\n            } else if (value.count >= 17 && value.count <= 18) {\r\n              return 'color-scale-amber';\r\n            } else if (value.count >= 19 && value.count <= 32) {\r\n              return 'color-scale-green';\r\n            }\r\n          }}\r\n          values={days}\r\n          horizontal={false}\r\n          onClick={value => history.push(`/entry#${value.date}`)}\r\n        />\r\n      </div>\r\n      <Graphs data={days} />\r\n    </>\r\n  );\r\n};\r\n","import { faFrown, faLaugh, faMeh, faSmile, faTired } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Form, Overlay, Tooltip } from \"react-bootstrap\";\r\nimport styles from \"../styles/question.module.css\";\r\n\r\nexport const Question = ({ question, info, onSelect, value }) => {\r\n  const [selected, setSelected] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  useEffect( () => {\r\n    if (value !== undefined) {\r\n      setSelected(value)\r\n    }\r\n  }, [])\r\n   \r\n\r\n  const handleSelect = (index) => {\r\n    setSelected(index);\r\n    onSelect(index);\r\n  }\r\n\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label ref={target} onClick={() => setShow(!show)}>{question}</Form.Label>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {(props) => (\r\n          <Tooltip {...props}>\r\n            {info}\r\n          </Tooltip>\r\n        )}\r\n      </Overlay>\r\n      <div className=\"d-flex mt-2 justify-content-around\">\r\n        <FontAwesomeIcon className={selected === 1 ? styles.selected : \"\"} onClick={() => handleSelect(1)} icon={faTired} size=\"lg\"/>\r\n        <FontAwesomeIcon className={selected === 2 ? styles.selected : \"\"} onClick={() => handleSelect(2)} icon={faFrown} size=\"lg\"/>\r\n        <FontAwesomeIcon className={selected === 3 ? styles.selected : \"\"} onClick={() => handleSelect(3)} icon={faMeh} size=\"lg\"/>\r\n        <FontAwesomeIcon className={selected === 4 ? styles.selected : \"\"} onClick={() => handleSelect(4)} icon={faSmile} size=\"lg\"/>\r\n        <FontAwesomeIcon className={selected === 5 ? styles.selected : \"\"} onClick={() => handleSelect(5)} icon={faLaugh} size=\"lg\"/>\r\n      </div>\r\n    </Form.Group>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { Question } from \"./question\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLongArrowAltLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  environmentalInfo: yup.string().required(\"This is a required field.\"),\r\n  socialInteraction: yup.number().min(1).max(5).required(),\r\n  communication: yup.number().min(1).max(5).required(),\r\n  difficultBehaviour: yup.number().min(1).max(5).required(),\r\n  attention: yup.number().min(1).max(5).required(),\r\n  sleepQuality: yup.number().min(1).max(5).required(),\r\n  overallMood: yup.number().min(1).max(5).required(),\r\n  otherComments: yup.string(),\r\n});\r\n\r\nexport const Entry = (props) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [data, setData] = useState(null);\r\n\r\n  const date = location.hash.substring(1);\r\n  console.log(date);\r\n\r\n  useEffect(() => {\r\n    firebase.user\r\n      .then(user => {\r\n        return firebase.firestore.collection(\"entries\").where(\"time\", \"==\", date).where(\"user\", \"==\", user.email).get();\r\n      })\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          console.log(doc.data())\r\n          setData(doc.data())\r\n        });\r\n      })\r\n  }, [firebase.firestore, firebase.user]);\r\n\r\n  const onSubmit = (values) => {\r\n    firebase.submitEntry(values)\r\n      .then(() => {\r\n        history.push(\"/tracker\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n\r\n  if (date != \"\"  && data == null) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        environmentalInfo: data == null ? \"\" : data.environmentalInfo,\r\n        otherComments: data == null ? \"\" : data.otherComments,\r\n        difficultBehaviour: data == null ? \"\" : data.difficultBehaviour,\r\n        attention: data == null ? \"\" : data.attention,\r\n        socialInteraction: data == null ? \"\" : data.socialInteraction,\r\n        communication: data == null ? \"\" : data.communication,\r\n        sleepQuality: data == null ? \"\" : data.sleepQuality,\r\n        overallMood: data == null ? \"\" : data.overallMood,\r\n      }}\r\n      validationSchema={FormSchema}\r\n      onSubmit={onSubmit}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n          values,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header>\r\n              <FontAwesomeIcon className=\"mr-auto\" icon={faLongArrowAltLeft} size=\"lg\" onClick={ () => history.goBack() }/>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                as=\"textarea\"\r\n                name=\"environmentalInfo\"\r\n                label=\"What did your child do today?\" />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"socialInteraction\", i)}\r\n                question=\"Social Interaction\"\r\n                info=\"How well did they get on with friends / family / strangers?\" \r\n                value={values.socialInteraction} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"communication\", i)}\r\n                question=\"Communication\"\r\n                info=\"How well did they express themselves today? How well did they listen?\" \r\n                value={values.communication} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"difficultBehaviour\", i)}\r\n                question=\"Difficult Behaviour\"\r\n                info=\"Was their behaviour disruptive and difficult to manage?\" \r\n                value={values.difficultBehaviour}/>                \r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"attention\", i)}\r\n                question=\"Attention\"\r\n                info=\"How well did they pay attention?\" \r\n                value={values.attention} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"sleepQuality\", i)}\r\n                question=\"Sleep Quality\"\r\n                info=\"How well did they sleep?\"\r\n                value={values.sleepQuality} />\r\n              <Question\r\n                onSelect={(i) => setFieldValue(\"overallMood\", i)}\r\n                question=\"Overall Mood\"\r\n                info=\"Overall, did they have a happy day?\"\r\n                value={values.overallMood} />\r\n              <FormikControl\r\n                as=\"textarea\"\r\n                name=\"otherComments\"\r\n                label=\"Any other comments?\" />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>\r\n                Submit\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  );\r\n};\r\n","import { faSearch, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useContext } from \"react\";\r\nimport { Dropdown, Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nconst ProfileIcon = React.forwardRef(({ onClick }, ref) => (\r\n  <FontAwesomeIcon ref={ref} className=\"ml-auto\" onClick={e => {\r\n    e.preventDefault();\r\n    onClick(e);\r\n  }} icon={faUserCircle} size=\"lg\"/>\r\n));\r\n\r\nexport const HomeWrapper = (props) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const onSignOut = () => {\r\n    firebase.auth\r\n      .signOut()\r\n      .then(() => {\r\n        history.push(\"/login\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"info\">\r\n        <Navbar.Brand href=\"/\">Project Awesome</Navbar.Brand>\r\n        <Dropdown>\r\n          <Dropdown.Toggle as={ProfileIcon} />\r\n          <Dropdown.Menu alignRight>\r\n            <Dropdown.Item onClick={onSignOut}>Sign Out</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Navbar>\r\n\r\n      <Nav justify variant=\"tabs\" >\r\n        <Nav.Item >\r\n          <Link className={`nav-link ${location.pathname.includes(\"articles\") ? \"active\" : \"\"}`} to=\"/articles\">Home</Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Link className={`nav-link ${location.pathname.includes(\"tracker\") || location.pathname.includes(\"entry\") ? \"active\" : \"\"}`} to=\"/tracker\">Tracker</Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Link className={`nav-link ${location.pathname.includes(\"profile\") ? \"active\" : \"\"}`} to=\"/profile\">Profile</Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      {props.children}\r\n\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport { Formik } from \"formik\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nexport const Login = () => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = ({ email, password }) => {\r\n    firebase.auth.setPersistence(firebase.persistenceSetting)\r\n      .then(() => {\r\n        return firebase.auth.signInWithEmailAndPassword(email, password)\r\n      })\r\n      .then(() => {\r\n        history.push(\"/articles\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={FormSchema}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Modal.Header>Sign In</Modal.Header>\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"email\"\r\n                type=\"email\"\r\n                label=\"Email Address\"\r\n                id=\"inputEmail\"\r\n                placeholder=\"Email Address\" />\r\n              <FormikControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Password\" />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Link className=\"mr-auto\" to=\"/register\">\r\n                <Button>\r\n                  Register\r\n                </Button>\r\n              </Link>\r\n              <Button type=\"submit\" variant=\"success\" disabled={isSubmitting}>Sign In</Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )\r\n      }\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Login;","import bsCustomFileInput from \"bs-custom-file-input\";\r\nimport { Formik } from \"formik\";\r\nimport { FormikControl } from \"formik-react-bootstrap\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Card, Form, Modal } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nconst FormSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n  name: yup.string().required(),\r\n  age: yup.number().min(1).required(),\r\n  diagnosis: yup.string().required(),\r\n});\r\n\r\nexport const Register = ({profileData}) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n  const [registration, setRegistration] = useState(profileData === undefined)\r\n  const [profileDataState, setProfileData] = useState(profileData)\r\n\r\n\r\n  useEffect(() => {\r\n    bsCustomFileInput.init()\r\n  }, [])\r\n\r\n  const handleSubmit = ({\r\n    email,\r\n    password,\r\n    name,\r\n    age,\r\n    diagnosis,\r\n    behaviourManagement,\r\n    ...rest\r\n  }) => {\r\n    firebase\r\n      .doRegister(\r\n        email,\r\n        password,\r\n        name,\r\n        age,\r\n        diagnosis,\r\n        rest,\r\n        behaviourManagement\r\n      )\r\n      .then(() => {\r\n        history.push(\"/articles\");\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        age: profileData !== undefined ? profileData.age : \"\",\r\n        email: profileData !== undefined ? profileData.email : \"\"\r\n      }}\r\n      validationSchema={FormSchema}\r\n      onSubmit={handleSubmit}>\r\n      {\r\n        ({\r\n          isSubmitting,\r\n          handleSubmit,\r\n          setFieldValue,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {registration && <Modal.Header>Register</Modal.Header>}\r\n            <Modal.Body>\r\n              <FormikControl\r\n                name=\"email\"\r\n                type=\"email\"\r\n                label=\"Email\" /> \r\n              { registration && <FormikControl\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\" /> }\r\n              <FormikControl\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Name\" />\r\n              <FormikControl\r\n                name=\"age\"\r\n                type=\"number\"\r\n                label=\"Age\" />\r\n              <FormikControl\r\n                name=\"diagnosis\"\r\n                type=\"text\"\r\n                label=\"Diagnosis\" />\r\n              <Card className=\"mb-3\">\r\n                <Card.Header>Communication Style</Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"receptive\"\r\n                    as=\"select\"\r\n                    label=\"Receptive\">\r\n                    <option>Verbal</option>\r\n                    <option>Non-verbal</option>\r\n                    <option>Visual</option>\r\n                  </FormikControl>\r\n                  <FormikControl\r\n                    name=\"expressive\"\r\n                    as=\"select\"\r\n                    label=\"Expressive\">\r\n                    <option>Verbal</option>\r\n                    <option>Non-verbal</option>\r\n                    <option>Visual</option>\r\n                  </FormikControl>\r\n                  <FormikControl\r\n                    name=\"communicationTool\"\r\n                    type=\"text\"\r\n                    label=\"Uses a communication tool?\" />\r\n                  <FormikControl\r\n                    name=\"yesNo\"\r\n                    type=\"text\"\r\n                    label=\"How do they say yes/no?\" />\r\n                  <FormikControl\r\n                    name=\"expressPain\"\r\n                    type=\"text\"\r\n                    label=\"How do they express pain?\" />\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"mb-3\">\r\n                <Card.Header>Extreme Behaviour Changes</Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"stressed\"\r\n                    type=\"text\"\r\n                    label=\"How do you know if they are stressed?\" />\r\n                  <FormikControl\r\n                    name=\"toAvoid\"\r\n                    type=\"text\"\r\n                    label=\"Things to avoid with your child\" />\r\n                  <FormikControl\r\n                    name=\"hypersensitive\"\r\n                    type=\"text\"\r\n                    label=\"Is your child hypersensitive to certain things?\" />\r\n                  <FormikControl\r\n                    name=\"aggression\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have a history of agitation/aggression?\" />\r\n                  <FormikControl\r\n                    name=\"banging\"\r\n                    type=\"text\"\r\n                    label=\"Does your child often exhibit behaviours such as head banging, screaming, rocking, flapping, hand wringing or repetitive vocalisations?\" />\r\n                  <FormikControl\r\n                    name=\"comfort\"\r\n                    type=\"text\"\r\n                    label=\"What is the best way to comfort your child?\" />\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"mb-3\">\r\n                <Card.Header>Social</Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"interactAdults\"\r\n                    type=\"text\"\r\n                    label=\"How do they interact with adults?\" />\r\n                  <FormikControl\r\n                    name=\"interactAdults\"\r\n                    type=\"text\"\r\n                    label=\"How do they interact with other children?\" />\r\n                  <FormikControl\r\n                    name=\"interactChildren\"\r\n                    type=\"text\"\r\n                    label=\"How do they interact with other children?\" />\r\n                  <FormikControl\r\n                    name=\"eyeContact\"\r\n                    type=\"text\"\r\n                    label=\"Does your child avoid eye contact or being close to other people?\" />\r\n                  <FormikControl\r\n                    name=\"followInstructions\"\r\n                    type=\"text\"\r\n                    label=\"Can your child follow instructions?\" />\r\n                  <FormikControl\r\n                    name=\"focus\"\r\n                    type=\"text\"\r\n                    label=\"How long can your child sit still or focus for?\" />\r\n                </Card.Body>\r\n              </Card>\r\n              <FormikControl\r\n                name=\"foods\"\r\n                type=\"text\"\r\n                label=\"What are your child’s favourite foods or beverages?\" />\r\n              <FormikControl\r\n                name=\"toys\"\r\n                type=\"text\"\r\n                label=\"What type of toys or activities does your child prefer?\" />\r\n              <FormikControl\r\n                name=\"hospital\"\r\n                type=\"text\"\r\n                label=\"How does your child behave at the doctor's / hospital?\" />\r\n              <Form.File\r\n                className=\"mb-3\"\r\n                name=\"behaviourManagement\"\r\n                label=\"Behavioural Management Plan\"\r\n                onChange={(e) => setFieldValue(\"behaviourManagement\", e.currentTarget.files[0])}\r\n                custom />\r\n              <Card>\r\n                <Card.Header>Medical Profile</Card.Header>\r\n                <Card.Body>\r\n                  <FormikControl\r\n                    name=\"medicalConditions\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have any medical conditions?\" />\r\n                  <FormikControl\r\n                    name=\"medications\"\r\n                    type=\"text\"\r\n                    label=\"Does your child take any medications?\" />\r\n                  <FormikControl\r\n                    name=\"allergies\"\r\n                    type=\"text\"\r\n                    label=\"Does your child have any allergies?\" />\r\n                  <FormikControl\r\n                    name=\"pastSurgeries\"\r\n                    type=\"text\"\r\n                    label=\"Has your child undergone any past surgeries? If so how did they manage?\" />\r\n                  <FormikControl\r\n                    name=\"vaccinations\"\r\n                    type=\"text\"\r\n                    label=\"Is your child up to date with their vaccinations?\" />\r\n                  <FormikControl\r\n                    name=\"familyHistory\"\r\n                    type=\"text\"\r\n                    label=\"Does your family have a history of medical conditions?\" />\r\n                </Card.Body>\r\n              </Card>\r\n            </Modal.Body>\r\n            { registration && <Modal.Footer>\r\n              <Link className=\"mr-auto\" to=\"/login\">\r\n                <Button>Sign In</Button>\r\n              </Link>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"success\"\r\n                disabled={isSubmitting}>\r\n                Register\r\n              </Button>\r\n            </Modal.Footer> }\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\nimport \"../styles/profile.css\";\r\nimport { Register } from \"./register\";\r\n\r\nexport const Profile = (props) => {\r\n    const firebase = useContext(FirebaseContext);\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.user\r\n            .then(user => {\r\n\r\n                console.log(user)\r\n                return firebase.firestore.collection(\"users\").where(\"email\", \"==\", user.email).get();\r\n            })\r\n            .then(querySnapshot => {\r\n                querySnapshot.forEach( doc => {\r\n                    console.log(doc.data())\r\n                    setUserData(doc.data());\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    if (userData == null) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <Register profileData={userData} />\r\n    )\r\n}","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../utils/firebase\";\r\n\r\nexport const PrivateRoute = ({ children, ...rest }) => {\r\n  const firebase = useContext(FirebaseContext);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    firebase.user.then(setUser)\r\n  }, [firebase.user])\r\n\r\n  if (user === \"\") {\r\n    return <></>;\r\n  }\r\n\r\n  if (user !== null) {\r\n    return (\r\n      <Route {...rest}>\r\n        {children}\r\n      </Route>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { AddArticle } from \"./components/addArticle\";\r\nimport { Articles } from \"./components/articles\";\r\nimport { Calendar } from \"./components/calendar\";\r\nimport { Entry } from \"./components/entry\";\r\nimport { HomeWrapper } from \"./components/homeWrapper\";\r\nimport { Login } from \"./components/login\";\r\nimport { Profile } from \"./components/profile\";\r\nimport { PrivateRoute } from \"./components/privateRoute\";\r\nimport { Register } from \"./components/register\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/articles\" />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n          <HomeWrapper>\r\n            <PrivateRoute exact path=\"/articles\" >\r\n              <Articles />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/tracker\" >\r\n              <Calendar />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/profile\" >\r\n              <Profile />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/entry\">\r\n              <Entry />\r\n            </PrivateRoute>\r\n            <PrivateRoute exact path=\"/article\">\r\n              <AddArticle />\r\n            </PrivateRoute>\r\n          </HomeWrapper>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Firebase, FirebaseContext } from \"./utils/firebase\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"question_selected__uTm2h\",\"change-color\":\"question_change-color__1Oh75\"};"],"sourceRoot":""}